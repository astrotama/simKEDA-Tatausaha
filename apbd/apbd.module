<?php


function apbd_permission() {
  return array(
    'sikd data feeder' => array(
      'title' => t('SIKD Data Feeder'),
      'description' => t('SIKD Data Feeder.'),
    ),
  );
}

function apbd_menu() {

	$items['tolak/edit'] = array (
      'title' => 'Tolak SPM',
	  'description' => 'Tolak SPM',
	  'title callback' => 'laporan_title_callback',	  
      'page callback' => 'tolak_edit_main',
      //'access arguments' => array ('access content'),
	  'access callback' => 'user_is_logged_in',
      'weight' => 11,
      'file' => 'tatausaha/tolak_edit_main.php',
      'type' => MENU_NORMAL_ITEM,
    );
	
	$items['plafonup'] = array (
      'title' => 'Plafon UP',
	  //'title callback' => 'laporan_title_callback',	  
      'page callback' => 'plafonup_main',
      //'access arguments' => array ('access content'),
	  //'access arguments' => array ('jurnal pendapatan pusat'),
	  'access callback' => 'user_is_logged_in',
      'weight' => 11,
      'file' => 'plafonup_main.php',
      'type' => MENU_NORMAL_ITEM,
    );	
	
	$items['apbd/chart'] = array (
	  'title' => 'Analisis',
      'page callback' => 'apbd_chart_main',
      'page arguments' => array('apbd_chart_main'),
      'access callback' => 'user_is_logged_in',
      'file' => 'apbd_chart_main.php',
      'type' => MENU_CALLBACK,
	  
    );

	//SKPD 
		$items['opd'] = array (
      'title' => 'Daftar OPD',
	  //'title callback' => 'laporan_title_callback',	  
      'page callback' => 'opd_main',
      //'access arguments' => array ('access content'),
	  //'access arguments' => array ('jurnal pendapatan pusat'),
	  'access callback' => 'user_is_logged_in',
      'weight' => 11,
      'file' => 'opd/opd_main.php',
      'type' => MENU_NORMAL_ITEM,
    );	
	$items['opd/edit'] = array (
      'title' => 'OPD',
	  'description' => 'OPD',
	  'title callback' => 'laporan_title_callback',	  
      'page callback' => 'opd_edit_main',
      //'access arguments' => array ('access content'),
	  'access callback' => 'user_is_logged_in',
      'weight' => 11,
      'file' => 'opd/opd_edit_main.php',
      'type' => MENU_NORMAL_ITEM,
    );	
    
    
	$items['upload/edit'] = array (
      'title' => 'Gambar Pendukung SPJ',
	  'description' => 'Gambar Pendukung SPJ',
	  'title callback' => '',	  
      'page callback' => 'upload_edit',
      //'access arguments' => array ('access content'),
	  'access callback' => 'user_is_logged_in',
      'weight' => 11,
      'file' => 'upload/upload_edit.php',
      'type' => MENU_NORMAL_ITEM,
    );
	$items['usulan_upload/edit'] = array (
      'title' => 'Gambar Pendukung SPJ',
	  'description' => 'Gambar Pendukung SPJ',
	  'title callback' => '',	  
      'page callback' => 'usulan_upload_edit',
      //'access arguments' => array ('access content'),
	  'access callback' => 'user_is_logged_in',
      'weight' => 11,
      'file' => 'upload/usulan_upload_edit.php',
      'type' => MENU_NORMAL_ITEM,
    );
	$items['upload/editspj'] = array (
      'title' => 'Gambar Softcopy SPJ',
	  'description' => 'Gambar Softcopy SPJ',
	  'title callback' => '',	  
      'page callback' => 'upload_edit',
      //'access arguments' => array ('access content'),
	  'access callback' => 'user_is_logged_in',
      'weight' => 11,
      'file' => 'upload/upload_edit.php',
      'type' => MENU_NORMAL_ITEM,
    );
	$items['uploadsign'] = array (
      'title' => 'Upload Setting eSPM',
	  'description' => 'Upload Setting eSPM',
	  'title callback' => '',	  
      'page callback' => 'uploadsign_edit',
      //'access arguments' => array ('access content'),
	  'access callback' => 'user_is_logged_in',
      'weight' => 11,
      'file' => 'upload/uploadsign_edit.php',
      'type' => MENU_NORMAL_ITEM,
    );	

	//KUITANSI 
	$items['kuitansi/edit'] = array (
      'title' => 'Kuitansi A2-1',
	  'title callback' => 'laporan_title_callback',	  
      'page callback' => 'kuitansi_edit_main',
      //'access arguments' => array ('access content'),
	  'access callback' => 'user_is_logged_in',
      'weight' => 11,
      'file' => 'tatausaha/kuitansi_edit_main.php',
      'type' => MENU_NORMAL_ITEM,
    );
	$items['kontrak/edit'] = array (
      'title' => 'Ringkasan Kontrak',
	  'title callback' => 'laporan_title_callback',	  
      'page callback' => 'kontrak_edit_main',
      //'access arguments' => array ('access content'),
	  'access callback' => 'user_is_logged_in',
      'weight' => 11,
      'file' => 'tatausaha/kontrak_edit_main.php',
      'type' => MENU_NORMAL_ITEM,
    );	
	$items['kuitansi/edita2'] = array (
      'title' => 'Kuitansi A2-2',
	  //'title callback' => 'laporan_title_callback',	  
      'page callback' => 'kuitansi_a22_main',
      //'access arguments' => array ('access content'),
	  'access callback' => 'user_is_logged_in',
      'weight' => 11,
      'file' => 'tatausaha/kuitansi_a22_main.php',
      'type' => MENU_NORMAL_ITEM,
    );	

	//PFK 
	$items['sikd'] = array (
      'title' => 'SIPD Data Feeder',
	  //'title callback' => 'laporan_title_callback',	  
      'page callback' => 'sikd_edit_main',
      //'access arguments' => array ('access content'),
	  //'access arguments' => array ('jurnal pendapatan pusat'),
	  'access callback' => 'user_is_logged_in',
      'weight' => 11,
      'file' => 'tatausaha/sikd_edit_main.php',
      'type' => MENU_NORMAL_ITEM,
    );	
	
	//APBD
	$items['anggaranupdate'] = array (
      'title' => 'Update Anggaran',
	  //'title callback' => 'laporan_title_callback',	  
      'page callback' => 'anggaranupdate_edit_main',
      //'access arguments' => array ('access content'),
	  //'access arguments' => array ('jurnal pendapatan pusat'),
	  'access callback' => 'user_is_logged_in',
      'weight' => 11,
      'file' => 'tatausaha/anggaranupdate_edit_main.php',
      'type' => MENU_NORMAL_ITEM,
    );	

	//PFK 
	$items['pfk/edit'] = array (
      'title' => 'Rekap PFK',
	  //'title callback' => 'laporan_title_callback',	  
      'page callback' => 'pfk_edit_main',
      //'access arguments' => array ('access content'),
	  'access callback' => 'user_is_logged_in',
      'weight' => 11,
      'file' => 'tatausaha/pfk_edit_main.php',
      'type' => MENU_NORMAL_ITEM,
    );	
	
	//SETTING SP2D
    $items['settingsp2d'] = array (
      'title' => 'Penandatangan SP2D',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('setting_sp2d_form'),
      //'access arguments' => array ('desa penghapusan'),
	  'access arguments' => array ('access content'),
      'file' => 'setting/setting_sp2d_form.php',
      'type' => MENU_CALLBACK,
    );		

	//OPERATOR
	$items['operators'] = array (
      'title' => 'Daftar Operator',
	  'description' => 'Daftar Operator',
	  //'title callback' => 'opt_title_callback',	  
      'page callback' => 'apbdop_main',
      //'access arguments' => array ('access content'),
	  'access callback' => 'user_is_logged_in',
      'weight' => 11,
      'file' => 'apbdop/apbdop_main.php',
      'type' => MENU_NORMAL_ITEM,
    );
	$items['operator/edit'] = array (
      'title' => 'Operator',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('apbdop_edit_form'),
      //'access arguments' => array ('desa penghapusan'),
	  'access arguments' => array ('access content'),
      'file' => 'apbdop/apbdop_edit_form.php',
      'type' => MENU_CALLBACK,
    );		
    $items['operator/delete'] = array (
      'title' => 'Hapus Operator',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('apbdop_delete_form'),
      //'access arguments' => array ('desa penghapusan'),
	  'access arguments' => array ('access content'),
      'file' => 'apbdop/apbdop_delete_form.php',
      'type' => MENU_CALLBACK,
    );	

    return $items;
}




function apbd_ExportPDFx($pageOrientation, $pageSize, $htmlContent, $pdfFiel) {

	$path = libraries_get_path('tcpdf');
	if (($path) && (file_exists($path . '/tcpdf.php'))) {
		require_once($path . '/tcpdf.php');
		require_once($path . '/config/lang/eng.php');
	}
  	set_time_limit(0);
	ini_set('memory_limit', '1024M');

	//require_once('libraries/tcpdf/config/lang/eng.php');
    //require_once('libraries/tcpdf/tcpdf.php');

	class MYPDF extends TCPDF {  
	   // Page footer
		public function Footer() {
			// Position at 15 mm from bottom
			//$this->SetY(-10);
			// Set font
			$this->SetFont('helvetica', 'I', 8);
			// Page number
		  //$this->Cell(0, 10, $this->getAliasNumPage().' dari '.$this->getAliasNbPages(), 0, false, 'C', 0, '', 0, false, 'T', 'M');     
		  $this->Cell(0,0,$this->PageNo(),'T',0,'R');
		}      
	} 
	
    $pdf = new MYPDF($pageOrientation, PDF_UNIT, $pageSize, true, 'UTF-8', false);
    set_time_limit(0);
    $pdf->SetCreator(PDF_CREATOR);
    $pdf->SetAuthor('SIPPD');
    $pdf->SetTitle('PDF Gen');
    $pdf->SetSubject('PDF Gen');
    $pdf->SetKeywords('APBD');
    $pdf->setPrintHeader(false);
    $pdf->setFooterFont(array('helvetica','', 10));
    $pdf->setFooterMargin(10);
	$pdf->setRightMargin(1);
    //$pdf->setFooterMargin(PDF_MARGIN_FOOTER);	
	if ($pageOrientation=='L') {
		$pdf->setHeaderMargin(20);
		//$pdf->SetMargins(5,20);
		$pdf->SetMargins(10,20);
	} else {
		$pdf->setHeaderMargin(10);
		$pdf->SetMargins(20,10);
	}
	
	//$pdf->SetMargins(15,15);
    $pdf->SetAutoPageBreak(true, 11);
    $pdf->setLanguageArray($l);
    $pdf->SetFont('helvetica','', 10);
    $pdf->AddPage();
    $pdf->writeHTML($htmlContent, true, 0, true, 0);
	
	//$ypos = $pdf->GetY();
	//$pdf->Write(0, $ypos, '', 0, 'L', true, 0, false, false, 0);
	//$ypos = $ypos-10;
	//$pdf->Write(0, $ypos, '', 0, 'L', true, 0, false, false, 0);
	
	//$pdf->SetY($ypos, true, false);
	
	//$pdf->writeHTML($htmlContent, true, 0, true, 0);
	ob_end_clean();
    $pdf->Output($pdfFiel, 'I');
	
}


function apbd_fn($num) {

    //return number_format((float)$num, 0, ',', '.');
	
	$x = number_format((float)$num, 0, ',', '.');
	if (substr($x,0,1)=='-' ) $x = '('. substr($x,1) . ')';
	return $x;
}

function apbd_fn2($num) {
    return number_format((float)$num, 2, ',', '.');
}

function apbd_fn1($num) {
    return number_format((float)$num, 1, ',', '.');
}

function apbd_fd($dt) {
	if (is_null($dt))
		return '';
	else
		return date('d-m-Y',strtotime($dt));
}

function apbd_fd_long($dt) {
	
	/*if (is_null($dt))
		return '';
	else {
		return t(date('j F Y',strtotime($dt)));
		
		//setlocale (LC_TIME, 'IND');
		//strftime( "%A, %d %B %Y %H:%M", time());
		//return strftime("%d %B %Y", strtotime($dt));
	}*/
	$date=explode('-',$dt);
	$bulanoption=array('Januari','Februari','Maret','April','Mei','Juni','Juli','Agustus','September','Oktober','November','Desember');
	$bulan=$date[1];
	if(substr($date[1],0,1)==0){
		$bulan=substr($date[1],1,1);
	}
	
	$string=$date[2].' '.$bulanoption[$bulan-1].' '.$date[0];
	return $string;
}
function apbd_fd_long_indo($dt) {
	
	$date=explode('-',$dt);
	$bulanoption=array('Januari','Februari','Maret','April','Mei','Juni','Juli','Agustus','September','Oktober','November','Desember');
	$bulan=$date[1];
	if(substr($date[1],0,1)==0){
		$bulan=substr($date[1],1,1);
	}
	
	$string=$date[2].' '.$bulanoption[$bulan-1].' '.$date[0];
	return $string;
}

function apbd_render_image() {
	return '[bg|{001C4CEE-D7CA-457F-A877-47F3C9DCB669}| 10 | 150 | random |10 | # 000000]';
}

function apbd_terbilang($x){
	$t = apbd_terbilangx($x);
	if ($t == '' || $t == ' ')
		return '# N.i.h.i.l #';
	else
		return '# ' . $t . ' Rupiah #';
}

function apbd_terbilangx($x){
  $abil = array("", "Satu", "Dua", "Tiga", "Empat", "Lima", "Enam", "Tujuh", "Delapan", "Sembilan", "Sepuluh", "Sebelas");
  if ($x < 12)
    return " " . $abil[$x];
  elseif ($x < 20)
    return apbd_terbilangx($x - 10) . "belas";
  elseif ($x < 100)
    return apbd_terbilangx($x / 10) . " Puluh" . apbd_terbilangx($x % 10);
  elseif ($x < 200)
    return " Seratus" . apbd_terbilangx($x - 100);
  elseif ($x < 1000)
    return apbd_terbilangx($x / 100) . " Ratus" . apbd_terbilangx($x % 100);
  elseif ($x < 2000)
    return " Seribu" . apbd_terbilangx($x - 1000);
  elseif ($x < 1000000)
    return apbd_terbilangx($x / 1000) . " Ribu" . apbd_terbilangx($x % 1000);
  elseif ($x < 1000000000)
    return apbd_terbilangx($x / 1000000) . " Juta" . apbd_terbilangx($x % 1000000);
  elseif ($x < 1000000000000)
    return apbd_terbilangx($x / 1000000000) . " Milyar" . apbd_terbilangx($x % 1000000000);
}

function apbd_format_rek_obyek($rek) {
	return substr_replace($rek, '.', 3, 0);
}

function apbd_format_rek_rincianobyek($rek) {
	$x = substr_replace($rek, '.', 5, 0);
	return substr_replace($x, '.', 3, 0);
}

function apbd_getuseruk() {
	$user =  user_load($GLOBALS['user']->uid);
	
	$x = $_SESSION["kodeuk_" . $user->name];
	
	$x = '';
	if ($x == '') {
		/*
		$query = db_select('apbdop', 'o');
		$query->fields('o', array('kodeuk'));
		$query->condition('o.username', $user->name, '=');
		$results = $query->execute();
		*/
		
		$results = db_query('select kodeuk from apbdop where username=:username', array(':username'=>$user->name));
		
		foreach ($results as $data) {
			$x = $data->kodeuk;
		}
		
		$_SESSION["kodeuk_" . $user->name] = $x;
		
	} 	
	return $x;	
}

function apbd_getuseruk_nama($kodeuk) {
	
	$x = $_SESSION["namauk_" . $kodeuk];
	
	$x = '';
	if ($x == '') {
		
		$results = db_query('select namasingkat from unitkerja where kodeuk=:kodeuk', array(':kodeuk'=>$kodeuk));
		
		foreach ($results as $data) {
			$x = $data->namasingkat;
		}
		
		$_SESSION["namauk_" . $kodeuk] = $x;
		
	} 	
	return $x;	
}
function apbd_getusersuk() {
	$user =  user_load($GLOBALS['user']->uid);
	
	/*
	$pquery = sprintf("select kodeuk from apbdop where username='%s'", $user->name);
	$pres = db_query($pquery);
	if ($data=db_fetch_object($pres)) {
		return $data->kodeuk;
	}
	return '';
	*/
	$x = '';
	$query = db_select('apbdop', 'o');
	$query->fields('o', array('kodesuk'));
	$query->condition('o.username', $user->name, '=');
	$results = $query->execute();
	foreach ($results as $data) {
		$x = $data->kodesuk;
	}
	if ($x=='') $x = '8101';
	return $x;	
}


function apbd_hitungpersen($anggaran, $realisasi){
	if ($anggaran == 0) 
		if ($realisasi == 0) 	
			$x = 0;
		else 
			$x = 100;
		
	else
		$x = ($realisasi/$anggaran)*100;
	
	return $x;
}

function apbd_get_dbvalue($val){
	$x = (real) $val;
	return $x;
}

function isSuperuser() {
	$user =  user_load($GLOBALS['user']->uid);
	if (in_array('superuser', $user->roles))
		return true;
	return (false || isAdministrator() || isManager());	
}

function isUserSKPD() {
	$user =  user_load($GLOBALS['user']->uid);
	if ((in_array('skpd', $user->roles)) or (in_array('ppkd', $user->roles)) or (in_array('pembantu', $user->roles)) or (in_array('verifikatorskpd', $user->roles)))
		return true;
	return false;
}

function isUserSKPDNonVerifikator() {
	$user =  user_load($GLOBALS['user']->uid);
	if ((in_array('skpd', $user->roles)) or (in_array('ppkd', $user->roles)) or (in_array('pembantu', $user->roles)))
		return true;
	return false;
}

function isUserPPKD() {
	$user =  user_load($GLOBALS['user']->uid);
	if (in_array('ppkd', $user->roles))
		return true;
	return false;
}

function isUserPembantu() {
	$user =  user_load($GLOBALS['user']->uid);
	if (in_array('pembantu', $user->roles))
		return true;
	return false;
}

function isManager() {
	$user =  user_load($GLOBALS['user']->uid);
	if (in_array('manager', $user->roles))
		return true;
	return false;
}

function isUserVerifikatorSKPD() {
	$user =  user_load($GLOBALS['user']->uid);
	if (in_array('verifikatorskpd', $user->roles))
		return true;
	return false;
}

function isAdministrator() {
	$user =  user_load($GLOBALS['user']->uid);
	if (user_access('Administer Nodes', $user))
		return true;
	return false;		
}

 
function apbd_ExportPDF_P($htmlContent, $marginatas, $pdfFiel) {
    require_once('files/tcpdf/config/lang/eng.php');
    require_once('files/tcpdf/tcpdf.php');

	class MYPDF extends TCPDF {  
	   // Page footer 
		public function Footer() {
			// Position at 15 mm from bottom
			//$this->SetY(-10);
			// Set font
			$this->SetFont('helvetica', 'I', 8);
			// Page number
		  //$this->Cell(0, 10, $this->getAliasNumPage().' dari '.$this->getAliasNbPages(), 0, false, 'C', 0, '', 0, false, 'T', 'M');     
		  $hal1 = $_SESSION["hal1"];
		  if ($hal1=='') 
			  $hal1 = 0;
		  else 
			  $hal1--;
		  $this->Cell(0,0,'PEMERINTAH KABUPATEN JEPARA TA. ' . apbd_tahun(),'T',0,'L');
		  $this->Cell(0,0,$this->PageNo() + $hal1,'T',0,'R');
		}      
	} 
	
    $pdf = new MYPDF('P', PDF_UNIT, 'F4', true, 'UTF-8', false);
    set_time_limit(0);
    $pdf->SetCreator(PDF_CREATOR);
    $pdf->SetAuthor('SIPPD');
    $pdf->SetTitle('PDF Gen');
    $pdf->SetSubject('PDF Gen');
    $pdf->SetKeywords('APBD');
    $pdf->setPrintHeader(false);
    $pdf->setFooterFont(array('helvetica','', 9));
    $pdf->setFooterMargin(10);
	$pdf->setRightMargin(1);
    //$pdf->setFooterMargin(PDF_MARGIN_FOOTER);	

	$pdf->setHeaderMargin(10);
	$pdf->SetMargins(20, $marginatas);
	
	//$pdf->SetMargins(15,15);
    $pdf->SetAutoPageBreak(true, 11);
    $pdf->setLanguageArray($l);
    $pdf->SetFont('helvetica','', 10);
    $pdf->AddPage();
    $pdf->writeHTML($htmlContent, true, 0, true, 0);
	
	//$ypos = $pdf->GetY();
	//$pdf->Write(0, $ypos, '', 0, 'L', true, 0, false, false, 0);
	//$ypos = $ypos-10;
	//$pdf->Write(0, $ypos, '', 0, 'L', true, 0, false, false, 0);
	
	//$pdf->SetY($ypos, true, false);
	
	//$pdf->writeHTML($htmlContent, true, 0, true, 0);
	ob_end_clean();
    $pdf->Output($pdfFiel, 'I');
	
}


function apbd_ExportPDF($pageOrientation, $pageSize, $htmlContent, $pdfFiel) {
    require_once('files/tcpdf/config/lang/eng.php');
    require_once('files/tcpdf/tcpdf.php');

	class MYPDF extends TCPDF {  
	   // Page footer
		public function Footer() {
			// Position at 15 mm from bottom
			//$this->SetY(-10);
			// Set font
			$this->SetFont('helvetica', 'I', 8);
			// Page number
		  //$this->Cell(0, 10, $this->getAliasNumPage().' dari '.$this->getAliasNbPages(), 0, false, 'C', 0, '', 0, false, 'T', 'M');     
		  $this->Cell(0,0,$this->PageNo(),'T',0,'R');
		}      
	} 
	
    $pdf = new MYPDF($pageOrientation, PDF_UNIT, $pageSize, true, 'UTF-8', false);
    set_time_limit(0);
    $pdf->SetCreator(PDF_CREATOR);
    $pdf->SetAuthor('SIPPD');
    $pdf->SetTitle('PDF Gen');
    $pdf->SetSubject('PDF Gen');
    $pdf->SetKeywords('APBD');
    $pdf->setPrintHeader(false);
    $pdf->setFooterFont(array('helvetica','', 9));
    $pdf->setFooterMargin(10);
	$pdf->setRightMargin(1);
    //$pdf->setFooterMargin(PDF_MARGIN_FOOTER);	
	if ($pageOrientation=='L') {
		$pdf->setHeaderMargin(20);
		//$pdf->SetMargins(5,20);
		$pdf->SetMargins(10,20);
	} else {
		$pdf->setHeaderMargin(10);
		$pdf->SetMargins(20,10);
	}
	
	//$pdf->SetMargins(15,15);
    $pdf->SetAutoPageBreak(true, 11);
    $pdf->setLanguageArray($l);
    //$pdf->SetFont('helvetica','', 20);
    $pdf->AddPage();
    $pdf->writeHTML($htmlContent, true, 0, true, 0);
	
	//$ypos = $pdf->GetY();
	//$pdf->Write(0, $ypos, '', 0, 'L', true, 0, false, false, 0);
	//$ypos = $ypos-10;
	//$pdf->Write(0, $ypos, '', 0, 'L', true, 0, false, false, 0);
	
	//$pdf->SetY($ypos, true, false);
	
	//$pdf->writeHTML($htmlContent, true, 0, true, 0);
	ob_end_clean();
    $pdf->Output($pdfFiel, 'I');
	
}

function apbd_ExportSPP($htmlContent, $pdfFiel) {
    require_once('files/tcpdf/config/lang/eng.php');
    require_once('files/tcpdf/tcpdf.php');

	class MYPDF extends TCPDF {  
	   // Page footer
		public function Footer() {
			// Position at 15 mm from bottom
			//$this->SetY(-10);
			// Set font
			$this->SetFont('Courier', 'I', 9);
			// Page number
			//$this->Cell(0, 10, 'Hal. '.$this->getAliasNumPage().' dari '.$this->getAliasNbPages(), 0, false, 'C', 0, '', 0, false, 'T', 'M');   
			
			$this->Cell(0,0,'PEMERINTAH KABUPATEN JEPARA TA. ' . apbd_tahun(),'T',0,'L');
			$ts = date("md:His|y");
			//if ($base < 9998) {
			//	$halaman = $this->PageNo() + $base;
			//	$this->Cell(0,0,$halaman ,'T',0,'R');
			//} else
			//	$this->Cell(0,0,'' , 'T',0,'');	
			$this->Cell(0,0,$ts ,'T',0,'R');			}      
	} 
	
    $pdf = new MYPDF('P', PDF_UNIT, 'F4', true, 'UTF-8', false);
    set_time_limit(0);
    $pdf->SetCreator(PDF_CREATOR);
    $pdf->SetAuthor('SIPPD');
    $pdf->SetTitle('PDF Gen');
    $pdf->SetSubject('PDF Gen');
    $pdf->SetKeywords('APBD');
    $pdf->setPrintHeader(false);
    //$pdf->setFooterFont(array('helvetica','', 10));
    //$pdf->setFooterMargin(10);
	//$pdf->setRightMargin(1);
    //$pdf->setFooterMargin(PDF_MARGIN_FOOTER);	

	$pdf->SetHeaderMargin(PDF_MARGIN_HEADER);
	$pdf->SetMargins(15, 10, PDF_MARGIN_RIGHT);
	
	$pdf->setFooterMargin(10);
	$pdf->SetAutoPageBreak(true, 10);
	
    $pdf->SetAutoPageBreak(TRUE, PDF_MARGIN_BOTTOM);
    $pdf->setLanguageArray($l);
    //$pdf->SetFont('dejavusans', '', 9);
	$pdf->SetFont('Courier', '', 9);
    $pdf->AddPage();
    $pdf->writeHTML($htmlContent, true, 0, true, 0);
	
	$ypos = $pdf->GetY() - 43;
	$xpos = $pdf->GetX() + 5;
	//$pdf->Write(0, $ypos, '', 0, 'L', true, 0, false, false, 0);
	//$ypos = $ypos-10;
	//$pdf->Write(0, $ypos, '', 0, 'L', true, 0, false, false, 0);
	
	//$pdf->SetY($ypos, true, false);
	
	/*
	$style = array(
		'border' => true,
		'vpadding' => 'auto',
		'hpadding' => 'auto',
		'fgcolor' => array(0,0,0),
		'bgcolor' => false, //array(255,255,255)
		'module_width' => 1, // width of a single module in points
		'module_height' => 1 // height of a single module in points
	);	
	$pdf->write2DBarcode('http://simkeda.astrotama.com/sppgaji/edit/0600001', 'QRCODE,Q', $xpos, $ypos, 30, 30, $style, 'N');
	*/
	
	//$pdf->writeHTML($htmlContent, true, 0, true, 0);
	ob_end_clean();
    $pdf->Output($pdfFiel, 'I');
	
}

function apbd_ExportSP2D($htmlContent,$footer, $pdfFiel) {
    require_once('files/tcpdf/config/lang/eng.php');
    require_once('files/tcpdf/tcpdf.php');

	class MYPDF extends TCPDF {  
	   // Page footer
		var $htmlFooter;
		public function setHtmlFooter($htmlFooter) {
			$this->htmlFooter = $htmlFooter;
		}
		public function Footer() {
			// Position at 15 mm from bottom
			//$this->SetY(-10);
			// Set font
			$this->SetFont('Courier', '', 9);
			$this->writeHTML($this->htmlFooter);
			
		}      
	} 
	
    $pdf = new MYPDF('P', PDF_UNIT, 'F4', true, 'UTF-8', false);
    set_time_limit(0);
	$pdf->setHtmlFooter($footer);
    $pdf->SetCreator(PDF_CREATOR);
    $pdf->SetAuthor('SIPPD');
    $pdf->SetTitle('PDF Gen');
    $pdf->SetSubject('PDF Gen');
    $pdf->SetKeywords('APBD');
    $pdf->setPrintHeader(false);
    //$pdf->setFooterFont(array('helvetica','', 10));
    //$pdf->setFooterMargin(10);
	//$pdf->setRightMargin(1);
    //$pdf->setFooterMargin(PDF_MARGIN_FOOTER);	

	$pdf->SetHeaderMargin(PDF_MARGIN_HEADER);
	$pdf->SetMargins(23, 20, PDF_MARGIN_RIGHT);
	
	$pdf->setFooterMargin(93);
	$pdf->SetAutoPageBreak(true, 10);
	
    $pdf->SetAutoPageBreak(TRUE, PDF_MARGIN_BOTTOM);
    $pdf->setLanguageArray($l);
    //$pdf->SetFont('dejavusans', '', 9);
	$pdf->SetFont('Courier', '', 9);
    $pdf->AddPage();
    $pdf->writeHTML($htmlContent, true, 0, true, 0);
	
	$ypos = $pdf->GetY() - 43;
	$xpos = $pdf->GetX() + 5;
	//$pdf->Write(0, $ypos, '', 0, 'L', true, 0, false, false, 0);
	//$ypos = $ypos-10;
	//$pdf->Write(0, $ypos, '', 0, 'L', true, 0, false, false, 0);
	
	//$pdf->SetY($ypos, true, false);
	
	/*
	$style = array(
		'border' => true,
		'vpadding' => 'auto',
		'hpadding' => 'auto',
		'fgcolor' => array(0,0,0),
		'bgcolor' => false, //array(255,255,255)
		'module_width' => 1, // width of a single module in points
		'module_height' => 1 // height of a single module in points
	);	
	$pdf->write2DBarcode('http://simkeda.astrotama.com/sppgaji/edit/0600001', 'QRCODE,Q', $xpos, $ypos, 30, 30, $style, 'N');
	*/
	
	//$pdf->writeHTML($htmlContent, true, 0, true, 0);
	ob_end_clean();
    $pdf->Output($pdfFiel, 'I');
	
}
function add_session(){
	
	if(!isset($_SESSION["sess"])){
		$_SESSION["sess"]='ok';
		if (isUserSKPD()) 
			$kodeuk = apbd_getuseruk();
		else {
			$kodeuk = 'ZZ';
		}
		//$bulan = date('m');
		$bulan = date('m');
		$jenisdokumen = 'ZZ';
		$spmok='ZZ';
		
		
		$_SESSION["spmuparsip_kodeuk"] = $kodeuk;
		$_SESSION["spmuparsip_bulan"] = $bulan;
		$_SESSION["spmuparsip_jenisdokumen"] = $jenisdokumen;
		$_SESSION["spmuparsip_spmok"] = $spmok;
		$_SESSION["gantiuangspm_arsip_kodeuk"] = $kodeuk;
		$_SESSION["gantiuangspm_arsip_bulan"] = $bulan;
		$_SESSION["gantiuangspm_arsip_spmok"] = $spmok;
		$_SESSION["gantiuangspm_arsip_jenisdokumen"]=$jenisdokumen ;
		$_SESSION["barangjasaspm_arsip_kodeuk"] = $kodeuk;
		$_SESSION["barangjasaspm_arsip_bulan"] = $bulan;
		$_SESSION["barangjasaspm_arsip_spmok"] = $spmok;
		$_SESSION["barangjasaspm_arsip_jenisdokumen"]=$jenisdokumen ;
	}
	
}

function apbd_ExportSPM($htmlContent, $pdfFiel, $url) {
    require_once('files/tcpdf/config/lang/eng.php');
    require_once('files/tcpdf/tcpdf.php');

	class MYPDF extends TCPDF {  
	   // Page footer
		public function Footer() {
			// Position at 15 mm from bottom
			//$this->SetY(-10);
			// Set font
			$this->SetFont('Courier', 'I', 9);
			// Page number
			//$this->Cell(0, 10, 'Hal. '.$this->getAliasNumPage().' dari '.$this->getAliasNbPages(), 0, false, 'C', 0, '', 0, false, 'T', 'M');   
			
			$this->Cell(0,0,'PEMERINTAH KABUPATEN JEPARA TA. ' . apbd_tahun(),'T',0,'L');
			//	$halaman = $this->PageNo() + $base;
			$this->Cell(0,0, $this->PageNo() . '/' . $this->getAliasNbPages() . ' halaman' ,'T',0,'R');

			$ts = date("md:His|y");
			//if ($base < 9998) {
			//	$halaman = $this->PageNo() + $base;
			//	$this->Cell(0,0,$halaman ,'T',0,'R');
			//} else
			//	$this->Cell(0,0,'' , 'T',0,'');	
			//$this->Cell(0,0,$ts ,'T',0,'R');			
		}      
	} 
	
    $pdf = new MYPDF('P', PDF_UNIT, 'F4', true, 'UTF-8', false);
    set_time_limit(0);
    $pdf->SetCreator(PDF_CREATOR);
    $pdf->SetAuthor('SIPPD');
    $pdf->SetTitle('PDF Gen');
    $pdf->SetSubject('PDF Gen');
    $pdf->SetKeywords('APBD');
    $pdf->setPrintHeader(false);
    //$pdf->setFooterFont(array('helvetica','', 10));
    //$pdf->setFooterMargin(10);
	//$pdf->setRightMargin(1);
    //$pdf->setFooterMargin(PDF_MARGIN_FOOTER);	

	$pdf->SetHeaderMargin(PDF_MARGIN_HEADER);
	$pdf->SetMargins(15, 10, PDF_MARGIN_RIGHT);
	
	$pdf->setFooterMargin(10);
	$pdf->SetAutoPageBreak(true, 10);
	
    $pdf->SetAutoPageBreak(TRUE, PDF_MARGIN_BOTTOM);
    $pdf->setLanguageArray($l);
    //$pdf->SetFont('dejavusans', '', 9);
	$pdf->SetFont('Courier', '', 9);
    $pdf->AddPage();
	
	$pdf->Image('files/verified.jpg', 15, 7, 20, 22, 'JPG', '', '', 
			true, 150, '', false, false, 0, false, false, false);
	
    $pdf->writeHTML($htmlContent, true, 0, true, 0);
	
	$ypos = $pdf->GetY() - 43;
	$xpos = $pdf->GetX() + 5;
	//$pdf->Write(0, $ypos, '', 0, 'L', true, 0, false, false, 0);
	//$ypos = $ypos-10;
	//$pdf->Write(0, $ypos, '', 0, 'L', true, 0, false, false, 0);
	
	//$pdf->SetY($ypos, true, false);
	
	$style = array(
		'border' => true,
		'vpadding' => 'auto',
		'hpadding' => 'auto',
		'fgcolor' => array(0,0,0),
		'bgcolor' => false, //array(255,255,255)
		'module_width' => 1, // width of a single module in points
		'module_height' => 1 // height of a single module in points
	);	
	$pdf->write2DBarcode($url, 'QRCODE,Q', $xpos, $ypos, 30, 30, $style, 'N');
	//$pdf->writeHTML($url, true, 0, true, 0);
	
	//$pdf->writeHTML($htmlContent, true, 0, true, 0);
	ob_end_clean();
    $pdf->Output($pdfFiel, 'I');
	
}

function apbd_ExportSPM_File($htmlContent, $url, $pdfFiel) {
	$dokid = substr($pdfFiel, -11, 7);
	//drupal_set_message($dokid);
	
	//CEK
	$cetakspm = '0';
	
	$res = db_query('select dokid,cetakspm from {dokumen} where dokid=:dokid', array(':dokid'=>$dokid));
	foreach ($res as $data) {
		$cetakspm = $data->cetakspm;
	}
	
	if ($cetakspm=='0') {
		require_once('files/tcpdf/config/lang/eng.php');
		require_once('files/tcpdf/tcpdf.php');

		class MYPDF extends TCPDF {  
		   // Page footer
			public function Footer() {
				// Position at 15 mm from bottom
				//$this->SetY(-10);
				// Set font
				$this->SetFont('Courier', 'I', 9);
				// Page number
				//$this->Cell(0, 10, 'Hal. '.$this->getAliasNumPage().' dari '.$this->getAliasNbPages(), 0, false, 'C', 0, '', 0, false, 'T', 'M');   
				
				$this->Cell(0,0,'PEMERINTAH KABUPATEN JEPARA TA. ' . apbd_tahun(),'T',0,'L');

				//$this->Cell(0, 10, 'Hal. '.$this->getAliasNumPage().' dari '.$this->getAliasNbPages(), 0, false, 'C', 0, '', 0, false, 'T', 'M');   

				//	$halaman = $this->PageNo() + $base;
				$this->Cell(0,0,$this->PageNo() ,'T',0,'R');

				$ts = date("md:His|y");
				//if ($base < 9998) {
				//	$halaman = $this->PageNo() + $base;
				//	$this->Cell(0,0,$halaman ,'T',0,'R');
				//} else
				//	$this->Cell(0,0,'' , 'T',0,'');	
				//$this->Cell(0,0,$ts ,'T',0,'R');
			}      
		} 
		
		$pdf = new MYPDF('P', PDF_UNIT, 'F4', true, 'UTF-8', false);
		set_time_limit(0);
		$pdf->SetCreator(PDF_CREATOR);
		$pdf->SetAuthor('SIPPD');
		$pdf->SetTitle('PDF Gen');
		$pdf->SetSubject('PDF Gen');
		$pdf->SetKeywords('APBD');
		$pdf->setPrintHeader(false);
		//$pdf->setFooterFont(array('helvetica','', 10));
		//$pdf->setFooterMargin(10);
		//$pdf->setRightMargin(1);
		//$pdf->setFooterMargin(PDF_MARGIN_FOOTER);	

		$pdf->SetHeaderMargin(PDF_MARGIN_HEADER);
		$pdf->SetMargins(15, 10, PDF_MARGIN_RIGHT);
		
		$pdf->setFooterMargin(10);
		$pdf->SetAutoPageBreak(true, 10);
		
		$pdf->SetAutoPageBreak(TRUE, PDF_MARGIN_BOTTOM);
		$pdf->setLanguageArray($l);
		//$pdf->SetFont('dejavusans', '', 9);
		$pdf->SetFont('Courier', '', 9);
		$pdf->AddPage();

		$pdf->Image('files/verified.jpg', 15, 7, 20, 22, 'JPG', '', '', 
			true, 150, '', false, false, 0, false, false, false);
	
		$pdf->writeHTML($htmlContent, true, 0, true, 0);
		
		$ypos = $pdf->GetY() - 43;
		$xpos = $pdf->GetX() + 5;
		//$pdf->Write(0, $ypos, '', 0, 'L', true, 0, false, false, 0);
		//$ypos = $ypos-10;
		//$pdf->Write(0, $ypos, '', 0, 'L', true, 0, false, false, 0);
		
		//$pdf->SetY($ypos, true, false);
		
		$style = array(
			'border' => true,
			'vpadding' => 'auto',
			'hpadding' => 'auto',
			'fgcolor' => array(0,0,0),
			'bgcolor' => false, //array(255,255,255)
			'module_width' => 1, // width of a single module in points
			'module_height' => 1 // height of a single module in points
		);	
		$pdf->write2DBarcode($url, 'QRCODE,Q', $xpos, $ypos, 30, 30, $style, 'N');
		//$pdf->writeHTML($url, true, 0, true, 0);
		
		//$pdf->writeHTML($htmlContent, true, 0, true, 0);
		//$pdf->Output($pdfFiel, 'I');

		$output_dest = 'F';
		//$pdf->Output('sites/default/files/sp2d/'.$pdfFiel, $output_dest);
		$pdf->Output('files/spm/'.$pdfFiel, $output_dest);
		
		//$pdf->Output($pdfFiel, 'I');
		
		
		$query = db_update('dokumen')
				->fields( 
				array(
					'cetakspm' => '1',

				)
			);
			
		$query->condition('dokid', $dokid, '=');
		$res = $query->execute();		
		
	}
}

function apbd_ExportDoc_File($htmlContent, $url, $pdfFiel) {
	$dokid = substr($pdfFiel, -11, 7);
	//drupal_set_message($dokid);
	
	//CEK
	
	require_once('files/tcpdf/config/lang/eng.php');
	require_once('files/tcpdf/tcpdf.php');

	class MYPDF extends TCPDF {  
	   // Page footer
		public function Footer() {
			// Position at 15 mm from bottom
			//$this->SetY(-10);
			// Set font
			$this->SetFont('Courier', 'I', 9);
			// Page number
			//$this->Cell(0, 10, 'Hal. '.$this->getAliasNumPage().' dari '.$this->getAliasNbPages(), 0, false, 'C', 0, '', 0, false, 'T', 'M');   
			
			$this->Cell(0,0,'PEMERINTAH KABUPATEN JEPARA TA. ' . apbd_tahun(),'T',0,'L');
			$ts = date("md:His|y");
			//if ($base < 9998) {
			//	$halaman = $this->PageNo() + $base;
			//	$this->Cell(0,0,$halaman ,'T',0,'R');
			//} else
			//	$this->Cell(0,0,'' , 'T',0,'');	
			$this->Cell(0,0,$ts ,'T',0,'R');			}      
	} 
	
	$pdf = new MYPDF('P', PDF_UNIT, 'F4', true, 'UTF-8', false);
	set_time_limit(0);
	$pdf->SetCreator(PDF_CREATOR);
	$pdf->SetAuthor('SIPPD');
	$pdf->SetTitle('PDF Gen');
	$pdf->SetSubject('PDF Gen');
	$pdf->SetKeywords('APBD');
	$pdf->setPrintHeader(false);
	//$pdf->setFooterFont(array('helvetica','', 10));
	//$pdf->setFooterMargin(10);
	//$pdf->setRightMargin(1);
	//$pdf->setFooterMargin(PDF_MARGIN_FOOTER);	

	$pdf->SetHeaderMargin(PDF_MARGIN_HEADER);
	$pdf->SetMargins(15, 10, PDF_MARGIN_RIGHT);
	
	$pdf->setFooterMargin(10);
	$pdf->SetAutoPageBreak(true, 10);
	
	$pdf->SetAutoPageBreak(TRUE, PDF_MARGIN_BOTTOM);
	$pdf->setLanguageArray($l);
	//$pdf->SetFont('dejavusans', '', 9);
	$pdf->SetFont('Courier', '', 9);
	$pdf->AddPage();

	//$pdf->Image('files/verified.jpg', 15, 7, 20, 22, 'JPG', '', '', 
	//	true, 150, '', false, false, 0, false, false, false);

	$pdf->writeHTML($htmlContent, true, 0, true, 0);
	
	
	$ypos = $pdf->GetY() - 43;
	$xpos = $pdf->GetX() + 5;
	//$pdf->Write(0, $ypos, '', 0, 'L', true, 0, false, false, 0);
	//$ypos = $ypos-10;
	//$pdf->Write(0, $ypos, '', 0, 'L', true, 0, false, false, 0);
	
	//$pdf->SetY($ypos, true, false);
	
	/*
	$style = array(
		'border' => true,
		'vpadding' => 'auto',
		'hpadding' => 'auto',
		'fgcolor' => array(0,0,0),
		'bgcolor' => false, //array(255,255,255)
		'module_width' => 1, // width of a single module in points
		'module_height' => 1 // height of a single module in points
	);	
	$pdf->write2DBarcode($url, 'QRCODE,Q', $xpos, $ypos, 30, 30, $style, 'N');
	//$pdf->writeHTML($url, true, 0, true, 0);
	*/
	
	//$pdf->writeHTML($htmlContent, true, 0, true, 0);
	//$pdf->Output($pdfFiel, 'I');

	$output_dest = 'F';
	//$pdf->Output('sites/default/files/sp2d/'.$pdfFiel, $output_dest);
	ob_end_clean();
	$pdf->Output('files/spm/'.$pdfFiel, $output_dest);
	
	//$pdf->Output($pdfFiel, 'I');
		
}

function apbd_ExportSPP1($htmlContent, $pdfFiel, $url) {
    require_once('files/tcpdf/config/lang/eng.php');
    require_once('files/tcpdf/tcpdf.php');

	class MYPDF extends TCPDF {  
	   // Page footer
		public function Footer() {
			// Position at 15 mm from bottom
			//$this->SetY(-10);
			// Set font
			$this->SetFont('Courier', 'I', 9);
			// Page number
			//$this->Cell(0, 10, 'Hal. '.$this->getAliasNumPage().' dari '.$this->getAliasNbPages(), 0, false, 'C', 0, '', 0, false, 'T', 'M');   
			
			$this->Cell(0,0,'PEMERINTAH KABUPATEN JEPARA TA. ' . apbd_tahun(),'T',0,'L');
			$ts = date("md:His|y");
			//if ($base < 9998) {
			//	$halaman = $this->PageNo() + $base;
			//	$this->Cell(0,0,$halaman ,'T',0,'R');
			//} else
			//	$this->Cell(0,0,'' , 'T',0,'');	
			$this->Cell(0,0,$ts ,'T',0,'R');			}      
	} 
	
    $pdf = new MYPDF('P', PDF_UNIT, 'F4', true, 'UTF-8', false);
    set_time_limit(0);
    $pdf->SetCreator(PDF_CREATOR);
    $pdf->SetAuthor('SIPPD');
    $pdf->SetTitle('PDF Gen');
    $pdf->SetSubject('PDF Gen');
    $pdf->SetKeywords('APBD');
    $pdf->setPrintHeader(false);
    //$pdf->setFooterFont(array('helvetica','', 10));
    //$pdf->setFooterMargin(10);
	//$pdf->setRightMargin(1);
    //$pdf->setFooterMargin(PDF_MARGIN_FOOTER);	

	$pdf->SetHeaderMargin(PDF_MARGIN_HEADER);
	$pdf->SetMargins(15, 10, PDF_MARGIN_RIGHT);
	
	$pdf->setFooterMargin(10);
	$pdf->SetAutoPageBreak(true, 10);
	
    $pdf->SetAutoPageBreak(TRUE, PDF_MARGIN_BOTTOM);
    $pdf->setLanguageArray($l);
    //$pdf->SetFont('dejavusans', '', 9);
	$pdf->SetFont('Courier', '', 9);
    $pdf->AddPage();
    $pdf->writeHTML($htmlContent, true, 0, true, 0);
	
	$ypos = $pdf->GetY() - 35;
	$xpos = $pdf->GetX() + 5;
	//$pdf->Write(0, $ypos, '', 0, 'L', true, 0, false, false, 0);
	//$ypos = $ypos-10;
	//$pdf->Write(0, $ypos, '', 0, 'L', true, 0, false, false, 0);
	
	//$pdf->SetY($ypos, true, false);
	
	$style = array(
		'border' => true,
		'vpadding' => 'auto',
		'hpadding' => 'auto',
		'fgcolor' => array(0,0,0),
		'bgcolor' => false, //array(255,255,255)
		'module_width' => 1, // width of a single module in points
		'module_height' => 1 // height of a single module in points
	);	
	$pdf->write2DBarcode($url, 'QRCODE,Q', $xpos, $ypos, 30, 30, $style, 'N');
	//$pdf->writeHTML($url, true, 0, true, 0);
	
	//$pdf->writeHTML($htmlContent, true, 0, true, 0);
	ob_end_clean();
    $pdf->Output($pdfFiel, 'I');
	
}

function apbd_ExportSPP1_LS($htmlContent, $pdfFiel, $url) {
    require_once('files/tcpdf/config/lang/eng.php');
    require_once('files/tcpdf/tcpdf.php');

	class MYPDF extends TCPDF {  
	   // Page footer
		public function Footer() {
			// Position at 15 mm from bottom
			//$this->SetY(-10);
			// Set font
			$this->SetFont('Courier', 'I', 9);
			// Page number
			//$this->Cell(0, 10, 'Hal. '.$this->getAliasNumPage().' dari '.$this->getAliasNbPages(), 0, false, 'C', 0, '', 0, false, 'T', 'M');   
			
			$this->Cell(0,0,'PEMERINTAH KABUPATEN JEPARA TA. ' . apbd_tahun(),'T',0,'L');
			$ts = date("md:His|y");
			//if ($base < 9998) {
			//	$halaman = $this->PageNo() + $base;
			//	$this->Cell(0,0,$halaman ,'T',0,'R');
			//} else
			//	$this->Cell(0,0,'' , 'T',0,'');	
			$this->Cell(0,0,$ts ,'T',0,'R');			}      
	} 
	
    $pdf = new MYPDF('P', PDF_UNIT, 'F4', true, 'UTF-8', false);
    set_time_limit(0);
    $pdf->SetCreator(PDF_CREATOR);
    $pdf->SetAuthor('SIPPD');
    $pdf->SetTitle('PDF Gen');
    $pdf->SetSubject('PDF Gen');
    $pdf->SetKeywords('APBD');
    $pdf->setPrintHeader(false);
    //$pdf->setFooterFont(array('helvetica','', 10));
    //$pdf->setFooterMargin(10);
	//$pdf->setRightMargin(1);
    //$pdf->setFooterMargin(PDF_MARGIN_FOOTER);	

	$pdf->SetHeaderMargin(PDF_MARGIN_HEADER);
	$pdf->SetMargins(15, 10, PDF_MARGIN_RIGHT);
	
	$pdf->setFooterMargin(10);
	$pdf->SetAutoPageBreak(true, 10);
	
    $pdf->SetAutoPageBreak(TRUE, PDF_MARGIN_BOTTOM);
    $pdf->setLanguageArray($l);
    //$pdf->SetFont('dejavusans', '', 9);
	$pdf->SetFont('Courier', '', 9);
    $pdf->AddPage();
    $pdf->writeHTML($htmlContent, true, 0, true, 0);
	
	$ypos = $pdf->GetY() + 5;
	$xpos = $pdf->GetX() + 5;
	//$pdf->Write(0, $ypos, '', 0, 'L', true, 0, false, false, 0);
	//$ypos = $ypos-10;
	//$pdf->Write(0, $ypos, '', 0, 'L', true, 0, false, false, 0);
	
	//$pdf->SetY($ypos, true, false);
	
	$style = array(
		'border' => true,
		'vpadding' => 'auto',
		'hpadding' => 'auto',
		'fgcolor' => array(0,0,0),
		'bgcolor' => false, //array(255,255,255)
		'module_width' => 1, // width of a single module in points
		'module_height' => 1 // height of a single module in points
	);	
	$pdf->write2DBarcode($url, 'QRCODE,Q', $xpos, $ypos, 30, 30, $style, 'N');
	//$pdf->writeHTML($url, true, 0, true, 0);
	
	//$pdf->writeHTML($htmlContent, true, 0, true, 0);
	ob_end_clean();
    $pdf->Output($pdfFiel, 'I');
	
}

function apbd_Exportkontrak_Logo($htmlContent, $pdfFiel) {
    require_once('files/tcpdf/config/lang/eng.php');
    require_once('files/tcpdf/tcpdf.php');

	class MYPDF extends TCPDF {  
	   // Page footer
		public function Footer() {
			// Position at 15 mm from bottom
			//$this->SetY(-10);
			// Set font
			$this->SetFont('helvetica', 'I', 7);
			// Page number
			//$this->Cell(0, 10, 'Hal. '.$this->getAliasNumPage().' dari '.$this->getAliasNbPages(), 0, false, 'C', 0, '', 0, false, 'T', 'M');   
			
			$this->Cell(0,0,'PEMERINTAH KABUPATEN JEPARA TA. ' . apbd_tahun(),'T',0,'L');
			$ts = date("md:His|y");
			//if ($base < 9998) {
			//	$halaman = $this->PageNo() + $base;
			//	$this->Cell(0,0,$halaman ,'T',0,'R');
			//} else
			//	$this->Cell(0,0,'' , 'T',0,'');	
			$this->Cell(0,0,$ts ,'T',0,'R');			}      
	} 
	
    $pdf = new MYPDF('P', PDF_UNIT, 'F4', true, 'UTF-8', false);
    set_time_limit(0);
    $pdf->SetCreator(PDF_CREATOR);
    $pdf->SetAuthor('SIPPD');
    $pdf->SetTitle('PDF Gen');
    $pdf->SetSubject('PDF Gen');
    $pdf->SetKeywords('APBD');
    $pdf->setPrintHeader(false);
    $pdf->setFooterFont(array('helvetica','', 10));
    //$pdf->setFooterMargin(10);
	//$pdf->setRightMargin(1);
    //$pdf->setFooterMargin(PDF_MARGIN_FOOTER);	

	$pdf->SetHeaderMargin(PDF_MARGIN_HEADER);
	$pdf->SetMargins(15, 10, PDF_MARGIN_RIGHT);
	
	$pdf->setFooterMargin(10);
	$pdf->SetAutoPageBreak(true, 10);
	
    $pdf->SetAutoPageBreak(TRUE, PDF_MARGIN_BOTTOM);
    $pdf->setLanguageArray($l);
	 $pdf->setFooterFont(array('helvetica','', 9));
    $pdf->setFooterMargin(10);
	$pdf->setRightMargin(1);
    //$pdf->setFooterMargin(PDF_MARGIN_FOOTER);	

	$pdf->setHeaderMargin(10);
	$pdf->SetMargins(15,10);

    //$pdf->SetFont('Courier New', '', 9);
    $pdf->AddPage();

	$pdf->Image('files/logo_kecil.png', 15, 9, 20, 22, 'PNG', '', '', 
			true, 150, '', false, false, 0, false, false, false);
	
    $pdf->writeHTML($htmlContent, true, 0, true, 0);
	
	//$ypos = $pdf->GetY();
	//$pdf->Write(0, $ypos, '', 0, 'L', true, 0, false, false, 0);
	//$ypos = $ypos-10;
	//$pdf->Write(0, $ypos, '', 0, 'L', true, 0, false, false, 0);
	
	//$pdf->SetY($ypos, true, false);
	
	//$pdf->writeHTML($htmlContent, true, 0, true, 0);
	ob_end_clean();
    $pdf->Output($pdfFiel, 'I');
	
}


function apbd_ExportSPP_Logo($htmlContent, $pdfFiel) {
    require_once('files/tcpdf/config/lang/eng.php');
    require_once('files/tcpdf/tcpdf.php');

	class MYPDF extends TCPDF {  
	   // Page footer
		public function Footer() {
			// Position at 15 mm from bottom
			//$this->SetY(-10);
			// Set font
			$this->SetFont('helvetica', 'I', 7);
			// Page number
			//$this->Cell(0, 10, 'Hal. '.$this->getAliasNumPage().' dari '.$this->getAliasNbPages(), 0, false, 'C', 0, '', 0, false, 'T', 'M');   
			
			$this->Cell(0,0,'PEMERINTAH KABUPATEN JEPARA TA. ' . apbd_tahun(),'T',0,'L');
			$ts = date("md:His|y");
			//if ($base < 9998) {
			//	$halaman = $this->PageNo() + $base;
			//	$this->Cell(0,0,$halaman ,'T',0,'R');
			//} else
			//	$this->Cell(0,0,'' , 'T',0,'');	
			$this->Cell(0,0,$ts ,'T',0,'R');			}      
	} 
	
    $pdf = new MYPDF('P', PDF_UNIT, 'F4', true, 'UTF-8', false);
    set_time_limit(0);
    $pdf->SetCreator(PDF_CREATOR);
    $pdf->SetAuthor('SIPPD');
    $pdf->SetTitle('PDF Gen');
    $pdf->SetSubject('PDF Gen');
    $pdf->SetKeywords('APBD');
    $pdf->setPrintHeader(false);
    $pdf->setFooterFont(array('helvetica','', 10));
    //$pdf->setFooterMargin(10);
	//$pdf->setRightMargin(1);
    //$pdf->setFooterMargin(PDF_MARGIN_FOOTER);	

	$pdf->SetHeaderMargin(PDF_MARGIN_HEADER);
	$pdf->SetMargins(15, 10, PDF_MARGIN_RIGHT);
	
	$pdf->setFooterMargin(10);
	$pdf->SetAutoPageBreak(true, 10);
	
    $pdf->SetAutoPageBreak(TRUE, PDF_MARGIN_BOTTOM);
    $pdf->setLanguageArray($l);
    $pdf->SetFont('dejavusans', '', 9);
	//$pdf->SetFont('Courier New', '', 9);
    $pdf->AddPage();

	$pdf->Image('files/logo_kecil.png', 15, 9, 20, 22, 'PNG', '', '', 
			true, 150, '', false, false, 0, false, false, false);
	
    $pdf->writeHTML($htmlContent, true, 0, true, 0);
	
	//$ypos = $pdf->GetY();
	//$pdf->Write(0, $ypos, '', 0, 'L', true, 0, false, false, 0);
	//$ypos = $ypos-10;
	//$pdf->Write(0, $ypos, '', 0, 'L', true, 0, false, false, 0);
	
	//$pdf->SetY($ypos, true, false);
	
	//$pdf->writeHTML($htmlContent, true, 0, true, 0);
	ob_end_clean();
    $pdf->Output($pdfFiel, 'I');
	
}

function apbd_ExportSPP_Logo_e($htmlContent, $url, $pdfFiel) {
	$dokid = substr($pdfFiel, -13, 9);
	
    require_once('files/tcpdf/config/lang/eng.php');
    require_once('files/tcpdf/tcpdf.php');

	class MYPDF extends TCPDF {  
	   // Page footer
		public function Footer() {
			// Position at 15 mm from bottom
			//$this->SetY(-10);
			// Set font
			$this->SetFont('helvetica', 'I', 7);
			// Page number
			//$this->Cell(0, 10, 'Hal. '.$this->getAliasNumPage().' dari '.$this->getAliasNbPages(), 0, false, 'C', 0, '', 0, false, 'T', 'M');   
			
			$this->Cell(0,0,'PEMERINTAH KABUPATEN JEPARA TA. ' . apbd_tahun(),'T',0,'L');
			$ts = date("md:His|y");
			//if ($base < 9998) {
			//	$halaman = $this->PageNo() + $base;
			//	$this->Cell(0,0,$halaman ,'T',0,'R');
			//} else
			//	$this->Cell(0,0,'' , 'T',0,'');	
			$this->Cell(0,0,$ts ,'T',0,'R');			}      
	} 
	
    $pdf = new MYPDF('P', PDF_UNIT, 'F4', true, 'UTF-8', false);
    set_time_limit(0);
    $pdf->SetCreator(PDF_CREATOR);
    $pdf->SetAuthor('SIPPD');
    $pdf->SetTitle('PDF Gen');
    $pdf->SetSubject('PDF Gen');
    $pdf->SetKeywords('APBD');
    $pdf->setPrintHeader(false);
    $pdf->setFooterFont(array('helvetica','', 10));
    //$pdf->setFooterMargin(10);
	//$pdf->setRightMargin(1);
    //$pdf->setFooterMargin(PDF_MARGIN_FOOTER);	

	$pdf->SetHeaderMargin(PDF_MARGIN_HEADER);
	$pdf->SetMargins(15, 10, PDF_MARGIN_RIGHT);
	
	$pdf->setFooterMargin(10);
	$pdf->SetAutoPageBreak(true, 10);
	
    $pdf->SetAutoPageBreak(TRUE, PDF_MARGIN_BOTTOM);
    $pdf->setLanguageArray($l);
    $pdf->SetFont('dejavusans', '', 9);
	//$pdf->SetFont('Courier New', '', 9);
    $pdf->AddPage();

	$pdf->Image('files/logo_kecil.png', 15, 9, 20, 22, 'PNG', '', '', 
			true, 150, '', false, false, 0, false, false, false);
	
    $pdf->writeHTML($htmlContent, true, 0, true, 0);
	
	//$ypos = $pdf->GetY();
	//$pdf->Write(0, $ypos, '', 0, 'L', true, 0, false, false, 0);
	//$ypos = $ypos-10;
	//$pdf->Write(0, $ypos, '', 0, 'L', true, 0, false, false, 0);
	
	//$pdf->SetY($ypos, true, false);
	
	$output_dest = 'F';
	//$pdf->Output('sites/default/files/sp2d/'.$pdfFiel, $output_dest);
	$pdf->Output('files/spm/'.$pdfFiel, $output_dest);
	
}

function apbd_ExportSPP_Logo_e_dok($htmlContent, $url, $pdfFiel) {
	$dokid = substr($pdfFiel, -13, 9);
	
    require_once('files/tcpdf/config/lang/eng.php');
    require_once('files/tcpdf/tcpdf.php');

	class MYPDF extends TCPDF {  
	   // Page footer
		public function Footer() {
			// Position at 15 mm from bottom
			//$this->SetY(-10);
			// Set font
			$this->SetFont('helvetica', 'I', 7);
			// Page number
			//$this->Cell(0, 10, 'Hal. '.$this->getAliasNumPage().' dari '.$this->getAliasNbPages(), 0, false, 'C', 0, '', 0, false, 'T', 'M');   
			
			$this->Cell(0,0,'PEMERINTAH KABUPATEN JEPARA TA. ' . apbd_tahun(),'T',0,'L');
			$ts = date("md:His|y");
			//if ($base < 9998) {
			//	$halaman = $this->PageNo() + $base;
			//	$this->Cell(0,0,$halaman ,'T',0,'R');
			//} else
			//	$this->Cell(0,0,'' , 'T',0,'');	
			$this->Cell(0,0,$ts ,'T',0,'R');			}      
	} 
	
    $pdf = new MYPDF('P', PDF_UNIT, 'F4', true, 'UTF-8', false);
    set_time_limit(0);
    $pdf->SetCreator(PDF_CREATOR);
    $pdf->SetAuthor('SIPPD');
    $pdf->SetTitle('PDF Gen');
    $pdf->SetSubject('PDF Gen');
    $pdf->SetKeywords('APBD');
    $pdf->setPrintHeader(false);
    $pdf->setFooterFont(array('helvetica','', 10));
    //$pdf->setFooterMargin(10);
	//$pdf->setRightMargin(1);
    //$pdf->setFooterMargin(PDF_MARGIN_FOOTER);	

	$pdf->SetHeaderMargin(PDF_MARGIN_HEADER);
	$pdf->SetMargins(15, 10, PDF_MARGIN_RIGHT);
	
	$pdf->setFooterMargin(10);
	$pdf->SetAutoPageBreak(true, 10);
	
    $pdf->SetAutoPageBreak(TRUE, PDF_MARGIN_BOTTOM);
    $pdf->setLanguageArray($l);
    $pdf->SetFont('dejavusans', '', 9);
	//$pdf->SetFont('Courier New', '', 9);
    $pdf->AddPage();

	$pdf->Image('files/logo_kecil.png', 15, 9, 20, 22, 'PNG', '', '', 
			true, 150, '', false, false, 0, false, false, false);
	
    $pdf->writeHTML($htmlContent, true, 0, true, 0);
	
	//$ypos = $pdf->GetY();
	//$pdf->Write(0, $ypos, '', 0, 'L', true, 0, false, false, 0);
	//$ypos = $ypos-10;
	//$pdf->Write(0, $ypos, '', 0, 'L', true, 0, false, false, 0);
	
	//$pdf->SetY($ypos, true, false);
	
	$output_dest = 'F';
	//$pdf->Output('sites/default/files/sp2d/'.$pdfFiel, $output_dest);
	$pdf->Output('files/doc/'.$pdfFiel, $output_dest);
	
}

function apbd_ExportSPP_No_Footer($htmlContent, $pdfFiel) {
    require_once('files/tcpdf/config/lang/eng.php');
    require_once('files/tcpdf/tcpdf.php');

	class MYPDF extends TCPDF {  
	   // Page footer
	} 
	
    $pdf = new MYPDF('P', PDF_UNIT, 'F4', true, 'UTF-8', false);
    set_time_limit(0);
    $pdf->SetCreator(PDF_CREATOR);
    $pdf->SetAuthor('SIPPD');
    $pdf->SetTitle('PDF Gen');
    $pdf->SetSubject('PDF Gen');
    $pdf->SetKeywords('APBD');
    $pdf->setPrintHeader(false);
    //$pdf->setFooterFont(array('helvetica','', 10));
    //$pdf->setFooterMargin(10);
	//$pdf->setRightMargin(1);
    //$pdf->setFooterMargin(PDF_MARGIN_FOOTER);	

	$pdf->SetHeaderMargin(PDF_MARGIN_HEADER);
	$pdf->SetMargins(15, 10, PDF_MARGIN_RIGHT);
	
	$pdf->setFooterMargin(0);
	$pdf->SetAutoPageBreak(true, 10);
	
    $pdf->SetAutoPageBreak(TRUE, PDF_MARGIN_BOTTOM);
    $pdf->setLanguageArray($l);
    //$pdf->SetFont('dejavusans', '', 9);
	$pdf->SetFont('times', '', 11);		//Courier
    $pdf->AddPage();
    $pdf->writeHTML($htmlContent, true, 0, true, 0);
	
	//$ypos = $pdf->GetY();
	//$pdf->Write(0, $ypos, '', 0, 'L', true, 0, false, false, 0);
	//$ypos = $ypos-10;
	//$pdf->Write(0, $ypos, '', 0, 'L', true, 0, false, false, 0);
	
	//$pdf->SetY($ypos, true, false);
	
	//$pdf->writeHTML($htmlContent, true, 0, true, 0);
	ob_end_clean();
    $pdf->Output($pdfFiel, 'I');
	
}


function apbd_cron() {
	//populate_sp2d();
}

function populate_sp2d() {
//OPEN DATABASE
$query = db_select('dokumen', 'd');
$query->fields('d', array('dokid'));

$query->condition('d.sp2dno', '', '<>');	
$query->condition('d.sp2dok', '1', '=');
$query->condition('d.jenisdokumen', '3', '=');
$results = $query->execute();
foreach ($results as $data) {
	soap_sp2d_add($data->dokid);
}
}

function apbd_messagebox($message) {
  $commands = array();
  $commands[] = ajax_command_alert($message);
  return array('#type' => 'ajax', '#commands' => $commands);
}
 
function apbd_format_tanggal_pendek($sp2dtgl) {
	//drupal_set_message($sp2dtgl);
	//drupal_set_message(strtotime($sp2dtgl));
	$arrtgl=explode('-',$sp2dtgl);
	//$bulanoption=array('Januari','Februari','Maret','April','Mei','Juni','Juli','Agustus','September','Oktober','November','Desember');
	return $arrtgl[2].'-'.$arrtgl[1].'-'.$arrtgl[0];	
}

function apbd_get_namabulan($bulan) {

	switch ($bulan) {
		case 1:
			$x = 'Januari';
			break;
		case 2:
			$x = 'Februari';
			break;
		case 3:
			$x = 'Maret';
			break;
		case 4:
			$x = 'April';
			break;
		case 5:
			$x = 'Mei';
			break;
		case 6:
			$x = 'Juni';
			break;
		case 7:
			$x = 'Juli';
			break;
		case 8:
			$x = 'Agustus';
			break;
		case 9:
			$x = 'September';
			break;
		case 10:
			$x = 'Oktober';
			break;
		case 11:
			$x = 'November';
			break;
		case 12:
			$x = 'Desember';
			break;
	}

	return $x;
	
} 
//glyphicon glyphicon-check+
//<span class="label label-default">

function apbd_icon_valid() {
	return '<span class="glyphicon glyphicon-ok-sign" style="color:blue"></span>';
}

function apbd_icon_koreksi() {
	return '<span class="glyphicon glyphicon-ok-sign" style="color:orange"></span>';
}
function apbd_button_baru_lanjut($link, $caption) {
	return l('<span class="glyphicon glyphicon-menu-right" aria-hidden="true"></span> ' . $caption, $link , array ('html' => true, 'attributes'=> array ('class'=>'btn btn-primary btn-sm')));
}
function apbd_icon_sudah() {
	return '<span class="glyphicon glyphicon-ok-sign" style="color:green"></span>';
}
function apbd_icon_tolak() {
	return '<span class="glyphicon glyphicon-remove-circle" style="color:red"></span>';
}
function apbd_icon_belum() {
	return '<span class="glyphicon glyphicon-file" style="color:orange"></span>';
}

function apbd_button_baru($link) {
	return l('<span class="glyphicon glyphicon-file" aria-hidden="true"></span> Baru', $link , array ('html' => true, 'attributes'=> array ('class'=>'btn btn-primary btn-sm')));
}

function apbd_button_baru_custom($link, $caption) {
	return l('<span class="glyphicon glyphicon-file" aria-hidden="true"></span> ' . $caption, $link , array ('html' => true, 'attributes'=> array ('class'=>'btn btn-primary btn-sm')));
}

function apbd_button_print($link) {
	return l('<span class="glyphicon glyphicon-print" aria-hidden="true"></span> Cetak', $link , array ('html' => true, 'attributes'=> array ('class'=>'btn btn-primary btn-sm')));
}

function apbd_button_excel($link) {
	return l('<span class="glyphicon glyphicon-list" aria-hidden="true"></span> Excel', $link ,array ('html' => true, 'attributes'=> array ('class'=>'btn btn-primary btn-sm')));
}

function apbd_button_bukubesar($link) {
	return l('Buku Besar', $link, array ('html' => true, 'attributes'=> array ('class'=>'btn btn-success btn-xs btn-block')));
}

function apbd_button_image($linkedit, $adagambar) {
	/*
	if (($link_gambar=='') and ($numgambarlama=='0')) {
		$link = l('<span class="glyphicon glyphicon-plus" aria-hidden="true"></span> Tambah', $link_add , array ('html' => true, 'attributes'=> array ('class'=>'btn btn-danger btn-sm pull-right')));

		$link .= '&nbsp' . l('<span class="glyphicon glyphicon-picture" aria-hidden="true"></span> Tampilkan', $link_gambar , array ('html' => true, 'attributes'=> array ('class'=>'btn btn-danger btn-sm pull-right')));
		
	} else {
		$link = l('<span class="glyphicon glyphicon-plus" aria-hidden="true"></span> Tambah', $link_add , array ('html' => true, 'attributes'=> array ('class'=>'btn btn-success btn-sm pull-right')));

		$link .= '&nbsp' . l('<span class="glyphicon glyphicon-picture" aria-hidden="true"></span> Tampilkan', $link_gambar , array ('html' => true, 'attributes'=> array ('class'=>'btn btn-success btn-sm pull-right')));
	}
	*/

	if ($adagambar==0) {
		$link = '&nbsp' . l('<span class="glyphicon glyphicon-picture" aria-hidden="true"></span> S P J', $linkedit , array ('html' => true, 'attributes'=> array ('class'=>'btn btn-success btn-sm pull-right')));
	} else {
		$link = '&nbsp' . l('<span class="glyphicon glyphicon-picture" aria-hidden="true"></span> S P J', $linkedit , array ('html' => true, 'attributes'=> array ('class'=>'btn btn-danger btn-sm pull-right')));
	}	
	return $link;
}
function apbd_button_image_spj($adagambar) {
	/*
	if (($link_gambar=='') and ($numgambarlama=='0')) {
		$link = l('<span class="glyphicon glyphicon-plus" aria-hidden="true"></span> Tambah', $link_add , array ('html' => true, 'attributes'=> array ('class'=>'btn btn-danger btn-sm pull-right')));

		$link .= '&nbsp' . l('<span class="glyphicon glyphicon-picture" aria-hidden="true"></span> Tampilkan', $link_gambar , array ('html' => true, 'attributes'=> array ('class'=>'btn btn-danger btn-sm pull-right')));
		
	} else {
		$link = l('<span class="glyphicon glyphicon-plus" aria-hidden="true"></span> Tambah', $link_add , array ('html' => true, 'attributes'=> array ('class'=>'btn btn-success btn-sm pull-right')));

		$link .= '&nbsp' . l('<span class="glyphicon glyphicon-picture" aria-hidden="true"></span> Tampilkan', $link_gambar , array ('html' => true, 'attributes'=> array ('class'=>'btn btn-success btn-sm pull-right')));
	}
	*/

	if ($adagambar==0) {
		$link = array('class' => array('btn btn-success btn-sm pull-right'));
	} else {
		$link = array('class' => array('btn btn-danger btn-sm pull-right'));
	}	
	return $link;
}
function apbd_link_print_small($link, $caption) {
	return l('<span class="glyphicon glyphicon-print" aria-hidden="true"></span> ' . $caption, $link , array ('html' => true));
}

function apbd_button_baru_custom_small($link, $caption) {
	return l('<span class="glyphicon glyphicon-chevron-right" aria-hidden="true"></span> ' . $caption, $link , array ('html' => true, 'attributes'=> array ('class'=>'btn btn-primary btn-xs')));
}

function apbd_button_jurnal($link) {
	return l('Edit', $link, array ('html' => true, 'attributes'=> array ('class'=>'btn btn-success btn-xs btn-block', 'query' => drupal_get_destination())));
}

function apbd_button_hapus($link) {
	return l('Hapus', $link, array ('html' => true, 'attributes'=> array ('class'=>'btn btn-danger btn-xs btn-block')));
}

function apbd_button_hapus_disabled() {
	return l('Hapus', '', array ('html' => true, 'attributes'=> array ('class'=>'btn btn-danger btn-xs disabled btn-block')));
}
 
function apbd_button_cetak($link) {
	return l('Cetak', $link, array ('html' => true, 'attributes'=> array ('class'=>'btn btn-info btn-xs btn-block')));
}

function apbd_button_esp2d($dokid) {
	return l('eSP2D', 'http://simkedajepara.web.id/sp2d/default.aspx?dokid=E_SP2D_' . $dokid . '.PDF', array ('html' => true, 'attributes'=> array ('class'=>'btn btn-info btn-xs btn-block')));
}

function apbd_button_espm($dokid) {
	if (is_eSPMExists($dokid))
		return l('eSPM', 'http://simkedajepara.web.id/edoc2019/spm/E_SPM_' . $dokid . '.PDF', array ('html' => true, 'attributes'=> array ('class'=>'btn btn-info btn-xs btn-block')));
	else
		return '<p align="center">eSPM</p>';
}

function apbd_button_espm_link($dokid) {
	//'http://simkedajepara.web.id/sp2d/spm.aspx?dokid=E_SPM_' . $dokid . '.PDF';
	return 'http://simkedajepara.web.id/edoc2019/spm/E_SPM_' . $dokid . '.PDF';
}

function apbd_button_kegiatan($link) {
	return l('Kegiatan', $link, array ('html' => true, 'attributes'=> array ('class'=>'btn btn-success btn-xs btn-block')));
}

function apbd_button_register($link) {
	return l('Register', $link, array ('html' => true, 'attributes'=> array ('class'=>'btn btn-warning btn-xs btn-block')));;
}
function apbd_button_user($link) {
	return l('Edit Role', $link, array ('html' => true, 'attributes'=> array ('class'=>'btn btn-danger btn-xs btn-block')));;
}
function apbd_button_sp2d($link) {
	return l('SP2D', $link, array ('html' => true, 'attributes'=> array ('class'=>'btn btn-warning btn-xs btn-block')));

}
function apbd_button_jurnalkan($link) {
	return l('Baru', $link, array ('html' => true, 'attributes'=> array ('class'=>'btn btn-warning btn-xs btn-block')));

}
function apbd_button_jurnalitem($link) {
	return l('Rincian', $link, array ('html' => true, 'attributes'=> array ('class'=>'btn btn-warning btn-xs btn-block')));

}

function apbd_button_analisis($link) {
	return l('Analisis', $link, array ('html' => true, 'attributes'=> array ('class'=>'btn btn-info btn-xs btn-block')));
}

function apbd_button_chart($link) {
	return l('<span class="glyphicon glyphicon-stats" aria-hidden="true"></span> Grafis', $link , array ('html' => true, 'attributes'=> array ('class'=>'btn btn-danger pull-right')));
}
function apbd_button_tampilkan() {
	return t('<span class="glyphicon glyphicon-search" aria-hidden="true"></span>Tampilkan');
}

function apbd_getkodejurnal($kodeuk) {
	
	$v =0;
	/*
	$query = "select jurnalid from {jurnal} where jurnalid like '" . $parts . "%' order by jurnalid desc limit 1";
	$pres = db_query($query);
	if ($data=db_fetch_object($pres)) {
		$v = (int) substr($data->kodekeg,-3);
	} 
	*/	

	$query = db_select('jurnal', 'j')->extend('TableSort');
	$query->fields('j', array('jurnalid'));
	$query->condition('j.jurnalid', db_like($kodeuk) . '%', 'LIKE');
	$query->orderBy('j.jurnalid', 'DESC');
	$query->range(0, 1);
	//dpq($query);
	
	# execute the query
	$results = $query->execute();
	foreach ($results as $data) {
		$v = (int) substr($data->jurnalid,-5);
	}		
	$v++;
	$s = '00000' . $v;
	$s = $kodeuk . substr($s, strlen($s)-5);
	return $s;
}

function apbd_getkodedokumen($kodeuk) {
	
	
	$v = db_insert('dokidmaster')
		->fields(array('keterangan'))
		->values(array(
				'keterangan'=> $kodeuk,
				))
		->execute();
	
	
	
	//$s = '00000' . $v;
	$s = '19' . $kodeuk . sprintf("%05d", $v);		//substr($s, strlen($s)-5);
	return $s;
}

function apbd_getnosp2d($jenisdokumen, $jenisgaji) {
	
	/*
	0 : UP
	1 : GU
	2 : TU
	3 : GAJI
	4 : BJ
	5 : GU NiHIL
	6 : pad
	7 : TU niHIL
	8 : pfk
	*/
	
	/*
	GAJI
	PFK
	NiHIL
	RUTIN (UP, GU, TU, LS, TAMSIL)
	*/
	
	
	$query = db_select('dokumen', 'd')->extend('TableSort');
	$query->fields('d', array('sp2dno'));
	
	if ($jenisdokumen=='3') 								//GAJI
	
		if ($jenisgaji=='4') {								//TAMSIL
			$or = db_or();
			$or->condition('d.jenisdokumen', '0', '=');		//UP
			$or->condition('d.jenisdokumen', '1', '=');		//GU
			$or->condition('d.jenisdokumen', '2', '=');		//TU
			$or->condition('d.jenisdokumen', '4', '=');		//LS
			$or->condition('d.jenisgaji', '4', '=');		//TAMSIL
			$query->condition($or);
			
		} else {											//REGULER
			$query->condition('d.jenisdokumen', $jenisdokumen, '=');
			$query->condition('d.jenisgaji', '4', '<');
		}
		
	else if (($jenisdokumen=='0') or ($jenisdokumen=='1') or ($jenisdokumen=='2') or ($jenisdokumen=='4') or ($jenisdokumen=='6'))	{ //RUTIN
		$or = db_or();
		$or->condition('d.jenisdokumen', '0', '=');		//UP
		$or->condition('d.jenisdokumen', '1', '=');		//GU
		$or->condition('d.jenisdokumen', '2', '=');		//TU
		$or->condition('d.jenisdokumen', '4', '=');		//LS
		$or->condition('d.jenisdokumen', '6', '=');		//PAD
		$or->condition('d.jenisgaji', '4', '=');		//TAMSIL
		$query->condition($or);
		
	} else if (($jenisdokumen=='5') or ($jenisdokumen=='7'))	{	//NIHIL
		$or = db_or();
		$or->condition('d.jenisdokumen', '5', '=');
		$or->condition('d.jenisdokumen', '7', '=');
		$query->condition($or);
	
	} else if ($jenisdokumen=='8') 								//PFK
		$query->condition('d`.jenisdokumen', $jenisdokumen, '=');
	//else if ($jenisdokumen=='6') 								//PAD
	//	$query->condition('d.jenisdokumen', $jenisdokumen, '=');
	
	$query->orderBy('d.sp2dno', 'DESC');
	$query->range(0, 1);
	//dpq($query);
	
	$v = 0;
	# execute the query
	$results = $query->execute();
	foreach ($results as $data) {
		//drupal_set_message($data->sp2dno);
		//drupal_set_message(substr($data->sp2dno,0,5));
		$v = (int) substr($data->sp2dno,0,5);
	}		
	$v++;
	$s = '00000' . $v;
	$s = substr($s, strlen($s)-5);
	
	if ($jenisdokumen=='0')
		$s .= '/UP';
	else if ($jenisdokumen=='1')
		$s .= '/GU';
	else if ($jenisdokumen=='2')
		$s .= '/TU';
	else if ($jenisdokumen=='3')
		if ($jenisgaji=='4')
			$s .= '/LS';
		else
			$s .= '/G';
	else if ($jenisdokumen=='4')
		$s .= '/LS';
	else if ($jenisdokumen=='5')
		$s .= '/GU-NIHIL';
	else if ($jenisdokumen=='6')
		$s .= '/LS';
	else if ($jenisdokumen=='7')
		$s .= '/TU-NIHIL';
	else if ($jenisdokumen=='8')
		$s .= '/PFK';

	return $s;

}


function apbd_getmaxnosp2d($jenisdokumen, $jenisgaji) {
	
	$query = db_select('dokumen', 'd')->extend('TableSort');
	$query->fields('d', array('sp2dno'));
	
	if ($jenisdokumen=='3') 								//GAJI
	
		if ($jenisgaji=='4') {								//TAMSIL
			$or = db_or();
			$or->condition('d.jenisdokumen', '0', '=');		//UP
			$or->condition('d.jenisdokumen', '1', '=');		//GU
			$or->condition('d.jenisdokumen', '2', '=');		//TU
			$or->condition('d.jenisdokumen', '4', '=');		//LS
			$or->condition('d.jenisdokumen', '6', '=');
			$or->condition('d.jenisgaji', '4', '=');		//TAMSIL
			
			$query->condition($or);
			
		} else {											//REGULER
			$query->condition('d.jenisdokumen', $jenisdokumen, '=');
			$query->condition('d.jenisgaji', '4', '<');
		} 
		
	else if (($jenisdokumen=='0') or ($jenisdokumen=='1') or ($jenisdokumen=='2') or ($jenisdokumen=='4')  or ($jenisdokumen=='6')) {	//RUTIN
		$or = db_or();
		$or->condition('d.jenisdokumen', '0', '=');		//UP
		$or->condition('d.jenisdokumen', '1', '=');		//GU
		$or->condition('d.jenisdokumen', '2', '=');		//TU
		$or->condition('d.jenisdokumen', '4', '=');		//LS
		$or->condition('d.jenisdokumen', '6', '=');		//PAD
		$or->condition('d.jenisgaji', '4', '=');		//TAMSIL
		$query->condition($or);
		
	} else if (($jenisdokumen=='5') or ($jenisdokumen=='7'))	{	//NIHIL
		$or = db_or();
		$or->condition('d.jenisdokumen', '5', '=');
		$or->condition('d.jenisdokumen', '7', '=');
		$query->condition($or);
	
	} else if ($jenisdokumen=='8') 								//PFK
		$query->condition('d.jenisdokumen', $jenisdokumen, '=');
	//else if ($jenisdokumen=='6') 								//PAD
	//	$query->condition('d.jenisdokumen', $jenisdokumen, '=');
	
	$query->orderBy('d.sp2dno', 'DESC');
	$query->range(0, 1);	
	$v = 'Belum Ada';
	# execute the query
	$results = $query->execute();
	foreach ($results as $data) {
		$v = $data->sp2dno;
	}		
	if ($v=='') $v = 'Belum Ada';
	return $v;
}

function apbd_is_duplikasi($sp2dno) {
	
	$x = false;
	if ($sp2dno!='') {
		$query = db_select('dokumen', 'd');
		$query->fields('d', array('sp2dno'));
		$query->condition('d.sp2dno', $sp2dno, '=');
		$results = $query->execute();
		
		foreach ($results as $data) {
			$x = true;
		}		
	}
	return $x;
}



function apbd_getKodeRORKPPKD() {
	return "31301001";
}

function apbd_getKodeROSAL() {
	return "73101001";
} 

function apbd_getKodeROAPBD() {
	return "11101001";
} 
function apbd_getKodeROBendaharaPenerimaan() {
	return "11103001";
} 
function apbd_getKodeROPiutangDefault() {
	return "11310001";
} 
function apbd_getKodeROBendaharaPengeluaran() {
	return "11102001";
} 
function apbd_getKodeRORPDT() {
	return "11799000";
}
function apbd_getKodeRORADT() {
	return "13999000";
}

function apbd_tahun() {
	return '2019';
}

function apbd_perda() {
	return 'Nomor 57 Tahun 2018 tentang Penjabaran Anggaran Pendapatan dan Belanja Daerah Kabupaten Tahun Anggaran 2019';
}

function apbd_getbulan($bulan) {
	switch($bulan) {
		case '1':
			$x = "Januari";    
			break;
		case '2':
			$x = "Februari";    
			break;
		case '3':
			$x = "Maret";    
			break;
		case '4':
			$x = "April";    
			break;
		case '5':
			$x = "Mei";    
			break;
		case '6':
			$x = "Juni";    
			break;
		case '7':
			$x = "Juli";    
			break;
		case '8':
			$x = "Agustus";    
			break;
		case '9':
			$x = "September";    
			break;
		case '10':
			$x = "Oktober";    
			break;
		case '11':
			$x = "Nopember";    
			break;
		case '12':
			$x = "Desember";    
			break;

		default:
			//drupal_access_denied();
			break;
	}	
	return $x;
}
function setidbilling_lama($dokid){
	$res=db_query("select idbilling from dokumen order by idbilling desc limit 1");
	foreach($res as $data){
		$num=intval(substr($data->idbilling,3,5));
	}
	if(strlen($num+1)>2){
		$idbilling='20K00'.($num+1);
	}
	elseif(strlen($num+1)==2){
		$idbilling='20K000'.($num+1);
	}
	elseif(strlen($num+1)==1){
		$idbilling='20K0000'.($num+1);
	}
	//$idbilling='20K'.($num);
	
	$result=db_query("select idbilling from dokumen where dokid=:dokid",array(":dokid"=>$dokid));
	foreach($result as $data){
		$dokbilling=$data->idbilling;
		if(strlen($dokbilling)<4){
			$query = db_update('dokumen')
						->fields( 
						array(
							'idbilling' => $idbilling,
							
						)
					);
				$query->condition('dokid', $dokid, '=');
				$res = $query->execute();
		}
		else{
			$query = db_update('dokumen')
					->fields( 
					array(
						'idbilling' => $dokbilling,
						
					)
				);
			$query->condition('dokid', $dokid, '=');
			$res = $query->execute();
		}
	}
	
	drupal_set_message($idbilling);
	return $idbilling;
}

function setidbilling($dokid){
	
	$idbilling = '';
	$result=db_query("select idbilling from dokumen where dokid=:dokid",array(":dokid"=>$dokid));
	foreach($result as $data){
		$idbilling=$data->idbilling;
	}
	
	if (strlen($idbilling)<4) {
		
		//create new
		$num = 0;
		$res=db_query('select idbilling from dokumen where idbilling like :newid order by idbilling desc limit 1', array(':newid'=>'20K%'));
		foreach($res as $data){
			$num=intval(substr($data->idbilling,3,5));
		}
		if ($num<=125) $num = 125;
		$num++;
		$idbilling='20K' . sprintf('%05d', $num);
	
		$query = db_update('dokumen')
					->fields( 
					array(
						'idbilling' => $idbilling,
						
					)
				);
			$query->condition('dokid', $dokid, '=');
			$query->condition('sp2dok', 1, '=');
			
			$res = $query->execute();
		//drupal_set_message('U '. $idbilling);
		
		
	 
	}	
	
	//drupal_set_message($idbilling);
	return $idbilling;
	
}


function soap_enlisting($dokid) {
	
	$results = db_query('select d.sp2dno, d.sp2dtgl, d.jenisdokumen, d.kodebank, d.jumlah, d.penerimanama, d.penerimabankrekening, u.kodeuk, u.namauk, d.kodebank, u.bendahararekening, u.bendaharabank, u.bendaharaatasnama from {dokumen} d inner join {unitkerja} u on d.kodeuk=u.kodeuk where d.dokid=:dokid', array(':dokid' => $dokid));
	foreach ($results as $data) {  
		
		//if ($data->kodeuk=='10')
		//	$idbilling = '20S0' . substr($data->sp2dno, 1,4);
		//else
		//	$idbilling = '20' . $data->kodeuk . substr($data->sp2dno, 1,4);
		
		$tanggal = date("Ydm", strtotime($data->sp2dtgl));
		
		$idbilling=setidbilling($dokid);
		if ($data->jenisdokumen=='1')
			$data_soap = urlencode('{"nominal":"' . $data->jumlah . '","no_sp2d":"' . $data->sp2dno . '","penerima":"' . $data->bendaharaatasnama . '","rekening":"' . $data->bendahararekening . '","kode":"20","waktu":"' . date('His')	 . '","kode_bank":"' . $data->kodebank . '","id_billing":"' . $idbilling . '","skpd":"' . $data->namauk . '","tanggal":"' . $tanggal . '"}');
		else
			$data_soap = urlencode('{"nominal":"' . $data->jumlah . '","no_sp2d":"' . $data->sp2dno . '","penerima":"' . $data->penerimanama . '","rekening":"' . $data->penerimabankrekening . '","kode":"20","waktu":"' . date('His')	 . '","kode_bank":"' . $data->kodebank . '","id_billing":"' . $idbilling . '","skpd":"' . $data->namauk . '","tanggal":"' . $tanggal . '"}');
			
		
	}
	$data = str_replace('+', '%20', $data_soap);
	$uri = 'http://30.86.30.33:82/sp2d/get/' . $data_soap;	
	ini_set("allow_url_fopen", 1);
	//$ret_json = file_get_contents($uri);
	//$ret_array = json_decode($ret_json, true);
	
	

 return $uri;

  
}


function soap_sp2d_add($dokid) {
require_once('files/nusoap/nusoap.php');

//OPEN DATABASE
$query = db_select('dokumen', 'd');
$query->join('unitkerja', 'u', 'd.kodeuk=u.kodeuk');
$query->fields('d', array('dokid', 'spmno', 'spmtgl', 'sp2dno', 'sp2dtgl', 'kodekeg', 'keperluan', 'jumlah', 'potongan', 'netto', 
		'penerimanama', 'penerimabankrekening', 'penerimabanknama', 'penerimanpwp', 'pptknama', 'pptknip', 
		'sp2dok', 'spmok', 'jenisdokumen', 'jenisgaji', 'kodeuk', 'idbilling'));

$query->fields('u', array('namasingkat'));
$query->condition('d.dokid', $dokid, '=');

//dpq($query);	
	
# execute the query	
$results = $query->execute();
foreach ($results as $data) {
	
	$kodekeg = $data->kodekeg;

	//TANGGAL
	$tgl = $data->sp2dtgl;	
	$tglfix= explode('-',$tgl);
	$sp2dtgl=$tglfix[1].'-'.$tglfix[2].'-'.$tglfix[0];
	
	$tgl = $data->spmtgl;	
	$tglfix= explode('-',$tgl);
	$spmtgl=$tglfix[1].'-'.$tglfix[2].'-'.$tglfix[0];

	$sp2dno = $data->sp2dno;
	$spmno = $data->spmno;

	$keperluan = $data->keperluan;

	$penerimarekening = $data->penerimabankrekening;
	$penerimabank = substr ($data->penerimabanknama, 0, 50);
	$penerimanpwp = $data->penerimanpwp;

	$jumlah = $data->jumlah;
	$potongan = $data->potongan;
	$netto = $data->netto;
	
	$jenisdokumen = $data->jenisdokumen;
	$jenisgaji = $data->jenisgaji;
	$kodeuk = $data->kodeuk;
	
	$penerimanama = $data->penerimanama;
	
	$idbilling = $data->idbilling;
	
	/*
	if (($jenisdokumen == '4') or ($jenisdokumen == '6') or ($jenisdokumen == '8'))
		$penerimanama = $data->penerimanama;
	
	else {
		$penerimanama = $data->penerimanama;
		
		if (substr(strtoupper($penerimanama),0, 9)!='BENDAHARA') $penerimanama = 'BENDAHARA PENGELUARAN ' . $data->namasingkat . ' (' . $penerimanama . ')';
	}
	*/

}

$iwp = '0';
$taperum = '0';
$askes = '0';
$jkk = '0';
$jkm = '0';
$pph = '0';
$pph_id = '0';

$pph21 = '0';
$pph22 = '0';
$pph23 = '0';
$pphlain = '0';
$ppn = '0';
	
//http://simkedajepara.web.id/sp2d2017service/Service1.svc?wsdl
$client = new nusoap_client("http://simkedajepara.web.id/sp2dservice/Service1.svc?wsdl", "wsdl");
$client->soap_defencoding = 'UTF-8';
$err = $client->getError();

/**
 * Untuk menampilkan error
 */
if ($err) {
	$ret = '<h2>Constructor error<pre>' . $err . '</pre>';
	$ret .= '<h2>Debug</h2><pre>' . htmlspecialchars($client->getDebug(), ENT_QUOTES) . '</pre>';
exit();
}

//DOKUMEN
$sp2d = $dokid . '^' . $kodekeg . '^' . $sp2dno . '^' . $sp2dtgl . '^' . $spmno . '^' . $spmtgl . '^' . $keperluan . '^' . $penerimanama . '^' . $penerimarekening . '^' . $penerimabank . '^' . $penerimanpwp . '^' . $jumlah . '^' . $potongan . '^' . $netto . '^' . $iwp . '^' . $taperum . '^' . $askes . '^' . $jkk . '^' . $jkm . '^' . $pph . '^' . $pph_id . '^' . $pph21 . '^' . $pph22 . '^' . $pph23 . '^' . $pphlain . '^' . $ppn . '^' . $jenisdokumen . '^' . $kodeuk . '^' . $idbilling;

if (isAdministrator()) drupal_set_message($sp2d);	

$result = $client->call('InsertSP2D',array('sp2d' => $sp2d));

//POTONGAN GAJI
if ($jenisdokumen=='3') {
	$query = db_select('dokumenpotongan', 'd');
	$query->join('ltpotongan', 'p', 'd.kodepotongan=p.kodepotongan');
	$query->fields('d', array('dokid', 'kodepotongan', 'jumlah', 'keterangan'));
	$query->fields('p', array('uraian'));

	//$query->fields('u', array('namasingkat'));
	$query->condition('d.dokid', $dokid, '=');
	$query->condition('d.jumlah', 0, '>');

		
	# execute the query	
	$results = $query->execute();
	foreach ($results as $data) {
		$sp2dpotongan = $dokid . '^' . $data->kodepotongan . '^' . $data->jumlah . '^' . $data->keterangan . '^' . $data->uraian;

		if (isAdministrator()) drupal_set_message($sp2dpotongan);
		
		$result = $client->call('InsertSP2DPotongan',array('sp2dpotongan' => $sp2dpotongan));
	}		
}

//PAJAK
//if ($jenisdokumen!='3') {
	$query = db_select('dokumenpajak', 'd');
	$query->join('ltpajak', 'p', 'd.kodepajak=p.kodepajak');
	$query->fields('d', array('dokid', 'kodepajak', 'jumlah', 'keterangan', 'sudahbayar'));
	$query->fields('p', array('uraian'));

	//$query->fields('u', array('namasingkat'));
	$query->condition('d.dokid', $dokid, '=');
	$query->condition('d.jumlah', 0, '>');
	$query->condition('d.sudahbayar', 0, '=');

	//dpq($query);	
		
	# execute the query	
	$results = $query->execute();
	foreach ($results as $data) {
		$sp2dpajak = $dokid . '^' . $data->kodepajak . '^' . $data->jumlah . '^' . $data->keterangan . '^' . $data->uraian . '^0';	
		
		if (isAdministrator()) drupal_set_message($sp2dpajak);	
		
		$result = $client->call('InsertSP2DPajak',array('sp2dpajak' => $sp2dpajak));
	}		
//}


if ($client->fault) {
	$ret .= '<h2>Fault</h2>';
} else {
	// Check for errors
	$err = $client->getError();
	if ($err) {
		// Display the error
		$ret .= '<h2>Error</h2><pre>' . $err . '</pre>';
	} else {
		$ret = "sukses";
	}
}	
return $ret;
}	

	
function soap_sp2d_delete($dokid) {
require_once('files/nusoap/nusoap.php');
	
	//http://simkedajepara.web.id/sp2d2017service/Service1.svc?wsdl
    $client = new nusoap_client("http://simkedajepara.web.id/sp2d2017service/Service1.svc?wsdl", "wsdl");
    $client->soap_defencoding = 'UTF-8';
    $err = $client->getError();
    
    /**
     * Untuk menampilkan error
     */
    if ($err) {
		$ret = '<h2>Constructor error<pre>' . $err . '</pre>';
		$ret .= '<h2>Debug</h2><pre>' . htmlspecialchars($client->getDebug(), ENT_QUOTES) . '</pre>';
	exit();
    }
    
    $result = $client->call('DeleteSP2D',array('dokid'=>$dokid));
    if ($client->fault) {
        $ret .= '<h2>Fault</h2>';
    } else {
        // Check for errors
        $err = $client->getError();
        if ($err) {
            // Display the error
            $ret .= '<h2>Error</h2><pre>' . $err . '</pre>';
        } else {
            // Display the result
            //$nama = $peg["getNamaPegawaiResult"];
            //$data = $result["getDataPegawaiResult"];
			
			$ret = "sukses";
        }
    }	
	return $ret;
}	
	
function apbd_bud_jabatan() {
	if (variable_get('ttd_by_kuasa_bud', '0'))
		$x = variable_get('kuasa_bud_jabatan', 'BENDAHARA UMUM DAERAH');
	else
		$x = variable_get('bud_jabatan', 'BENDAHARA UMUM DAERAH');
	return $x;
}	

function apbd_bud_nama() {
	if (variable_get('ttd_by_kuasa_bud', '0'))
		$x = variable_get('kuasa_bud_nama', 'SITI NUR JANAH, SE');
	else
		$x = variable_get('bud_nama', 'Drs. ANWAR HARYONO, MM');
	return $x;
}	

function apbd_bud_nip() {
	if (variable_get('ttd_by_kuasa_bud', '0'))
		$x = variable_get('kuasa_bud_nip', '19650903 198603 2 018');
	else
		$x = variable_get('bud_nip', '19580318 198503 1 011');
	return $x;
}	


function apbd_readrealisasikegiatan($kodekeg, $tanggal) {
	$cair = 0;
	$kodeuk = substr($kodekeg, 4, 2);
	
	$res_spj = db_query('select sum(dr.jumlah) total from dokumen d inner join dokumenrekening dr on d.dokid=dr.dokid where d.sp2dok=1 and dr.kodekeg=:kodekeg', array(':kodekeg'=>$kodekeg));
	foreach ($res_spj as $data_spj) {
		$cair = $data_spj->total;
	}

	//RETUR
		
	db_set_active('bendahara');
	
	$query = db_select('bendahara' . $kodeuk, 'b');
	$query->addExpression('SUM(b.total)', 'total');

	$query->condition('b.kodekeg', $kodekeg, '=');
		
	$query->condition('b.jenis', 'ret-spj', '=');
	$query->condition('b.jenis', 'pindahbuku', '=');
	//$query->condition('b.tanggal', $tanggal, '<=');
	$res_spj = $query->execute();
	foreach ($res_spj as $data_spj) {
		$cair -= $data_spj->total;
	}	

	$query = db_select('bendahara' . $kodeuk, 'b');
	$query->addExpression('SUM(b.total)', 'total');

	$query->condition('b.kodekeg', $kodekeg, '=');
	$query->condition('b.jenis', 'pindahbuku', '=');
	//$query->condition('b.tanggal', $tanggal, '<=');
	$res_spj = $query->execute();
	foreach ($res_spj as $data_spj) {
		$cair += $data_spj->total;
	}
	
	db_set_active();
	
	
	return $cair;
}

function apbd_readreturkegiatan($kodekeg, $tanggal) {
	$retur = 0;
	
	$kodeuk = substr($kodekeg, 4, 2);
	
	
	db_set_active('bendahara');
	
	
	//RETUR
	
	$query = db_select('bendahara' . $kodeuk, 'b');
	$query->addExpression('SUM(b.total)', 'total');

	$query->condition('b.kodekeg', $kodekeg, '=');
	$query->condition('b.jenis', 'ret-spj', '=');
	//$query->condition('b.tanggal', $tanggal, '<=');
	$res_spj = $query->execute();
	foreach ($res_spj as $data_spj) {
		$retur -= $data_spj->total;
	}

	$query = db_select('bendahara' . $kodeuk, 'b');
	$query->addExpression('SUM(b.total)', 'total');

	$query->condition('b.kodekeg', $kodekeg, '=');
	$query->condition('b.jenis', 'pindahbuku', '=');
	//$query->condition('b.tanggal', $tanggal, '<=');
	$res_spj = $query->execute();
	foreach ($res_spj as $data_spj) {
		$retur += $data_spj->total;
	}		
	
	db_set_active();
	
	
	return $retur;
}

function apbd_readrealisasikegiatan_rekening($dokid, $kodekeg, $kodero, $tanggal) {
	$cair = 0;
	$kodeuk = substr($kodekeg, 4, 2);
	
	if ($dokid=='new')
		$res_spj = db_query('select sum(di.jumlah) total from {dokumenrekening} di inner join {dokumen} d on di.dokid=d.dokid where d.sp2dok=1 and di.kodekeg=:kodekeg and di.kodero=:kodero', array(':kodekeg'=>$kodekeg, ':kodero'=>$kodero));
	else
		$res_spj = db_query('select sum(di.jumlah) total from {dokumenrekening} di inner join {dokumen} d on di.dokid=d.dokid where d.sp2dok=1 and di.kodekeg=:kodekeg and d.sp2dtgl<=:tanggal and d.dokid<>:dokid and di.kodero=:kodero', array(':kodekeg'=>$kodekeg, ':tanggal'=>$tanggal, ':dokid'=>$dokid, ':kodero'=>$kodero));
	foreach ($res_spj as $data_spj) {
		$cair = $data_spj->total;
	}
	

	//RETUR
		
	db_set_active('bendahara');
	$query = db_select('bendahara' . $kodeuk, 'b');
	$query->innerJoin('bendaharaitem' . $kodeuk, 'bi', 'b.bendid=bi.bendid');
	$query->addExpression('SUM(bi.jumlah)', 'total');

	$query->condition('b.kodekeg', $kodekeg, '=');
	
	$query->condition('b.jenis', 'ret-spj', '=');
	//$query->condition('b.tanggal', $tanggal, '<=');
	$query->condition('bi.kodero', $kodero, '=');
	$res_spj = $query->execute();
	foreach ($res_spj as $data_spj) {
		$cair -= $data_spj->total;
	}	
	
	//pindahbuku
	$query = db_select('bendahara' . $kodeuk, 'b');
	$query->innerJoin('bendaharaitem' . $kodeuk, 'bi', 'b.bendid=bi.bendid');
	$query->addExpression('SUM(bi.jumlah)', 'total');

	$query->condition('b.kodekeg', $kodekeg, '=');
	
	$query->condition('b.jenis', 'pindahbuku', '=');
	//$query->condition('b.tanggal', $tanggal, '<=');
	$query->condition('bi.kodero', $kodero, '=');
	$res_spj = $query->execute();
	foreach ($res_spj as $data_spj) {
		$cair += $data_spj->total;
	}	
	
	db_set_active();
		
	
	
	return $cair;
}

function apbd_ExportSP2D_Lengkap($htmlContent, $url, $pdfFiel) {
	
	$dokid = substr($pdfFiel, -11, 7);
	//drupal_set_message($dokid);
	
	//CEK
	$cetaksp2d = '0';
	
	$res = db_query('select dokid,cetaksp2d from {dokumen} where dokid=:dokid', array(':dokid'=>$dokid));
	foreach ($res as $data) {
		$cetaksp2d = $data->cetaksp2d;
	}
	
	//drupal_set_message($cetaksp2d);
	
	if ($cetaksp2d=='0') {
		require_once('files/tcpdf/config/lang/eng.php');
		require_once('files/tcpdf/tcpdf.php');

		class MYPDF extends TCPDF {  
		   // Page footer
			var $htmlFooter;
			public function setHtmlFooter($htmlFooter) {
				$this->htmlFooter = $htmlFooter;
			}
			public function Footer() {
				// Position at 15 mm from bottom
				//$this->SetY(-10);
				// Set font
				$this->SetFont('Courier', '', 9);
				$this->writeHTML($this->htmlFooter);
				
			}      
		} 
		
		$pdf = new MYPDF('P', PDF_UNIT, 'F4', true, 'UTF-8', false);
		set_time_limit(0);
		$pdf->setHtmlFooter($footer);
		$pdf->SetCreator(PDF_CREATOR);
		$pdf->SetAuthor('simKEDA');
		$pdf->SetTitle('eSP2D - ' . $dokid);
		$pdf->SetSubject('eSP2D');
		$pdf->SetKeywords('eSP2D, simKEDA');
		$pdf->setPrintHeader(false);
		//$pdf->setFooterFont(array('helvetica','', 10));
		//$pdf->setFooterMargin(10);
		//$pdf->setRightMargin(1);
		//$pdf->setFooterMargin(PDF_MARGIN_FOOTER);	

		$pdf->SetHeaderMargin(PDF_MARGIN_HEADER);
		$pdf->SetMargins(23, 23, PDF_MARGIN_RIGHT);
		
		$pdf->setFooterMargin(93);
		$pdf->SetAutoPageBreak(true, 10);
		
		$pdf->SetAutoPageBreak(TRUE, PDF_MARGIN_BOTTOM);
		$pdf->setLanguageArray($l);
		//$pdf->SetFont('dejavusans', '', 9);
		$pdf->SetFont('Courier', '', 9);
		$pdf->AddPage();

		$pdf->Image('files/logo_kecil.png', 25, 25, 20, 22, 'PNG', '', '', 
				true, 150, '', false, false, 0, false, false, false);
		
		$pdf->writeHTML($htmlContent, true, 0, true, 0);
		
		$ypos = $pdf->GetY() - 37;
		$xpos = $pdf->GetX() + 5;

		$style = array(
			'border' => true,
			'vpadding' => 'auto',
			'hpadding' => 'auto',
			'fgcolor' => array(0,0,0),
			'bgcolor' => false, //array(255,255,255)
			'module_width' => 1, // width of a single module in points
			'module_height' => 1 // height of a single module in points
		);	
		$pdf->write2DBarcode($url, 'QRCODE,Q', $xpos, $ypos, 30, 30, $style, 'N');
		
		//$pdf->writeHTML($dokid, true, 0, true, 0);
		
		//$pdf->writeHTML($htmlContent, true, 0, true, 0);

		$output_dest = 'F';
		//$pdf->Output('sites/default/files/sp2d/'.$pdfFiel, $output_dest);
		$pdf->Output('files/sp2d/'.$pdfFiel, $output_dest);
		
		//$pdf->Output($pdfFiel, 'I');

		$query = db_update('dokumen')
				->fields( 
				array(
					'cetaksp2d' => '1',

				)
			);
		$query->condition('dokid', $dokid, '=');
		$res = $query->execute();		
	
	}
}

function apbd_ExportSP2D_LengkapView($htmlContent, $url, $pdfFiel) {
	
	require_once('files/tcpdf/config/lang/eng.php');
	require_once('files/tcpdf/tcpdf.php');

	class MYPDF extends TCPDF {  
	   // Page footer
		var $htmlFooter;
		public function setHtmlFooter($htmlFooter) {
			$this->htmlFooter = $htmlFooter;
		}
		public function Footer() {
			// Position at 15 mm from bottom
			//$this->SetY(-10);
			// Set font
			$this->SetFont('Courier', '', 9);
			$this->writeHTML($this->htmlFooter);
			
		}      
	} 
	
	$pdf = new MYPDF('P', PDF_UNIT, 'F4', true, 'UTF-8', false);
	set_time_limit(0);
	$pdf->setHtmlFooter($footer);
	$pdf->SetCreator(PDF_CREATOR);
	$pdf->SetAuthor('simKEDA');
	$pdf->SetTitle('eSP2D - ' . $dokid);
	$pdf->SetSubject('eSP2D');
	$pdf->SetKeywords('eSP2D, simKEDA');
	$pdf->setPrintHeader(false);
	//$pdf->setFooterFont(array('helvetica','', 10));
	//$pdf->setFooterMargin(10);
	//$pdf->setRightMargin(1);
	//$pdf->setFooterMargin(PDF_MARGIN_FOOTER);	

	$pdf->SetHeaderMargin(PDF_MARGIN_HEADER);
	$pdf->SetMargins(23, 23, PDF_MARGIN_RIGHT);
	
	$pdf->setFooterMargin(93);
	$pdf->SetAutoPageBreak(true, 10);
	
	$pdf->SetAutoPageBreak(TRUE, PDF_MARGIN_BOTTOM);
	$pdf->setLanguageArray($l);
	//$pdf->SetFont('dejavusans', '', 9);
	$pdf->SetFont('Courier', '', 9);
	$pdf->AddPage();

	$pdf->Image('files/logo_kecil.png', 25, 25, 20, 22, 'PNG', '', '', 
			true, 150, '', false, false, 0, false, false, false);
	
	$pdf->writeHTML($htmlContent, true, 0, true, 0);
	
	$ypos = $pdf->GetY() - 37;
	$xpos = $pdf->GetX() + 5;

	$style = array(
		'border' => true,
		'vpadding' => 'auto',
		'hpadding' => 'auto',
		'fgcolor' => array(0,0,0),
		'bgcolor' => false, //array(255,255,255)
		'module_width' => 1, // width of a single module in points
		'module_height' => 1 // height of a single module in points
	);	
	$pdf->write2DBarcode($url, 'QRCODE,Q', $xpos, $ypos, 30, 30, $style, 'N');
	

	ob_end_clean();
	$pdf->Output($pdfFiel, 'I');

}


function apbd_getKodeROKasBendaharaPengeluaran() {
	return "11102001";
} 

function createT($header, $row){
	$str='<table class="table table-striped">';
	if(sizeof($header)>0)
		$str.='<thead>';
	for($n=0;$n<sizeof($header);$n++){
		$str.='<tr>';
		for($m=0;$m<sizeof($header[$n]);$m++){
			if(isset($header[$n][$m]['colspan'])){
				$colspan=$header[$n][$m]['colspan'];
			}
			else{
				$colspan='';
			}
			if(isset($header[$n][$m]['rowspan']) && $header[$n][$m]['rowspan']!=null){
				$rowspan=$header[$n][$m]['rowspan'];
			}
			else{
				$rowspan='';
			}
			
			$str.='<th  align="center" rowspan="'.$header[$n][$m]['rowspan'].'" style="'.$header[$n][$m]['style'].'" width="'.$header[$n][$m]['width'].'">' . $header[$n][$m]['data'] . '</th>';
		}
		$str.='</tr>';
		
	}
	if(sizeof($header)>0)
		$str.='</thead>';
	/*
	$str='<table><th><td>a</td>';
	$str.='<td>b</td></th></table>';

	$str.='<td>b</td></th></table>';*/
	for($n=0;$n<sizeof($row);$n++)
	{
		$str.='<tr >';
		for($m=0;$m<sizeof($row[$n]);$m++)
		{
			$str.='<td width="'.$row[$n][$m]['width'].'" style="'.$row[$n][$m]['style'].'" align="'.$row[$n][$m]['align'].'">'.$row[$n][$m]['data'].'</td>';
		}
		$str.='</tr>';
	}
	$str.='</table>';
	return $str;
}

function dateapi_convert_timestamp_to_datetime($timestamp) {

	$date = new DateTime($timestamp);
	//date_timezone_set($date, timezone_open(drupal_get_user_timezone()));
	return date_format($date, 'Y-m-d');
}

function dateapi_convert_datetime_to_timestamp($datetime) {
	
	$date = date_create_from_format('Y-m-d',$datetime,timezone_open(drupal_get_user_timezone()));
	return date_timestamp_get($date);
}

function apbd_gutu_aktif() {
	if (isSuperuser()) {
		return true;
	} else {
		//if (apbd_getuseruk()=='04')
		//	return true;
		//else
			return true;		
	}
	
}


function apbd_ls_aktif() {
	if (isSuperuser()) {
		return true;
	} else {
		
		if (apbd_getuseruk()=='33')
			return true;
		else
			return false;
	}
}

function apbd_ls_menu_aktif() {
	if (isSuperuser()) {
		return true;
	} else {
		
		
		$ls_aktif = false;
		$pres = db_query('select count(ku.status) aktif from {kegiatanunblock} ku inner join {kegiatanskpd} k on ku.kodekeg=k.kodekeg where k.kodeuk=:kodeuk', array(':kodeuk'=> apbd_getuseruk()));
		foreach($pres as $data){
			$ls_aktif = ($data->aktif>0);
			
			//drupal_set_message($data->aktif);
		}		
		
		return $ls_aktif;
		
		//return false;
	}
}

function apbd_ls_dispensasi($kodekeg) {
	$ls_aktif = apbd_ls_aktif();
	
	if (!$ls_aktif) {
		$pres = db_query('select status from {kegiatanunblock} where kodekeg=:kodekeg', array(':kodekeg'=>$kodekeg));
		foreach($pres as $data){
			$ls_aktif = ($data->status=='1');
		}		
	}
	
	return $ls_aktif;
}

function modal($dokid,$btn,$text,$button,$header=null){
	$head=null;
	if($header!=null){
		$head='<div class="modal-header">
          <button type="button" class="close" data-dismiss="modal">&times;</button>
          <h4 class="modal-title">'.$header.'</h4>
        </div>';
	}
	
	$modal='
	<style>
		.modal {
		  text-align: center;
		}

		@media screen and (min-width: 768px) { 
		  .modal:before {
			display: inline-block;
			vertical-align: middle;
			content: " ";
			height: 100%;
		  }
		}

		.modal-dialog {
		  display: inline-block;
		  text-align: left;
		  vertical-align: middle;
		}
	</style>
	<img class="del" src="https://vignette.wikia.nocookie.net/rating-system/images/3/3f/450px-White_X_in_red_background.svg.png/revision/latest?cb=20130326132551" width="20px" heigh="20px"  data-toggle="modal" data-target="#myModal'.$dokid.'"></img>
	
	
	<div class="modal fade" id="myModal'.$dokid.'" role="dialog">
    <div class="modal-dialog">
    
      <!-- Modal content-->
      <div class="modal-content">
        '.$head.'
        <div class="modal-body">
          <p ><font size=5 >'.$text.'</font></p>
        </div>
        <div class="modal-footer">
		  <a class="btn btn-primary" href="/'.$button['link'].'">'.$button['data'].'</a>
          <button type="button" class="btn btn-danger" data-dismiss="modal">Batal</button>
        </div>
      </div>
      
    </div>
  </div>';
  return $modal;
}

function apbd_kodekeg_pembiayaan() {
	return apbd_tahun() . '00666666';
}	

function apbd_blank_space() {
	return '&nbsp;';
}

function is_eDocExistsBaru($filename) {
	
	
$ret = false;   

$uri = 'http://simkedajepara.web.id/checkdoc.php?token=simkeda2019&edok=' . $filename;
//drupal_set_message($uri);
$request = drupal_http_request($uri);

$ret_array = drupal_json_decode($request->data);
//drupal_set_message($ret_array["respon_code"]);
if ($ret_array["respon_code"]=='00') 
	$ret = true;
return $ret ;
}

function is_eDocExists($filename) {
	
	
	//$url = 'http://simkedajepara.web.id/edoc2019/spm/E_SPM_' . $dokid . '.PDF';
	
    $curl = curl_init($filename);

    //don't fetch the actual page, you only want to check the connection is ok
    curl_setopt($curl, CURLOPT_NOBODY, true);

    //do request
    $result = curl_exec($curl);

    $ret = false;

    //if request did not fail
    if ($result != false) {
        //if request was ok, check response code
        $statusCode = curl_getinfo($curl, CURLINFO_HTTP_CODE);  

        if ($statusCode == 200) {
            $ret = true;   
        }
    }

    curl_close($curl);
	
	//$ret = true;  
    return $ret;
}
function is_eDocExistscoba($filename) {
	
	
	//$url = 'http://simkedajepara.web.id/edoc2019/spm/E_SPM_' . $dokid . '.PDF';
	/*
    $curl = curl_init($filename);

    //don't fetch the actual page, you only want to check the connection is ok
    curl_setopt($curl, CURLOPT_NOBODY, true);

    //do request
    $result = curl_exec($curl);

    $ret = false;

    //if request did not fail
    if ($result != false) {
        //if request was ok, check response code
        $statusCode = curl_getinfo($curl, CURLINFO_HTTP_CODE);  

        if ($statusCode == 200) {
            $ret = true;   
        }
    }

    curl_close($curl);
	*/
	$ret = true;  
    return $ret;
}

function is_eSPMExists($dokid) {

$ret = false;   

$uri = 'http://simkedajepara.web.id/checkdoc.php?token=simkeda2019&edok=E_SPM_' . $dokid . '.PDF';
//drupal_set_message($uri);
$request = drupal_http_request($uri);

$ret_array = drupal_json_decode($request->data);
//drupal_set_message($ret_array["respon_code"]);
if ($ret_array["respon_code"]=='00') $ret = true;

return $ret;
	
}

function is_eSPMExists_lama($dokid) {
	
	/*
	$url = 'http://simkedajepara.web.id/edoc2019/spm/E_SPM_' . $dokid . '.PDF';
	
    $curl = curl_init($url);

    //don't fetch the actual page, you only want to check the connection is ok
    curl_setopt($curl, CURLOPT_NOBODY, true);

    //do request
    $result = curl_exec($curl);

    $ret = false;

    //if request did not fail
    if ($result != false) {
        //if request was ok, check response code
        $statusCode = curl_getinfo($curl, CURLINFO_HTTP_CODE);  

        if ($statusCode == 200) {
            $ret = true;   
        }
    }

    curl_close($curl);
	*/
	$ret = true;   
    return $ret;
	
}

function apbd_dpa_ppkd_pendapatan_nomor() {
return '001/PPKD-PENDAPATAN/' . apbd_tahun();
}

function apbd_dpa_ppkd_belanja_nomor() {
return '002/PPKD-BELANJA/' . apbd_tahun();
}

function apbd_dpa_ppkd_tanggal() {
return '28 Desember 2017';
}

function isjurnalsudahuk($kodekeg) {
	return true;
}

function modal_delete($dokid, $btn, $text, $button, $header=null){
	$head=null;
	if($header!=null){
		$head='<div class="modal-header">
          <button type="button" class="close" data-dismiss="modal">&times;</button>
          <h4 class="modal-title">'.$header.'</h4>
        </div>';
	}
	
	$modal='
	<style>
		.modal {
		  text-align: center;
		}

		@media screen and (min-width: 768px) { 
		  .modal:before {
			display: inline-block;
			vertical-align: middle;
			content: " ";
			height: 100%;
		  }
		}

		.modal-dialog {
		  display: inline-block;
		  text-align: left;
		  vertical-align: middle;
		}
	</style>
	<h5 role="button" class="glyphicon glyphicon-remove text-danger" aria-hidden="true" data-toggle="modal" data-target="#myModal'.$dokid.'"></h5>
	
	
	<div class="modal fade" id="myModal'.$dokid.'" role="dialog">
    <div class="modal-dialog">
    
      <!-- Modal content-->
      <div class="modal-content">
        '.$head.'
        <div class="modal-body">
          <p><h4>'.$text.'</h4></p>
        </div>
        <div class="modal-footer">
		  <a class="btn btn-primary" href="/'.$button['link'].'">'.$button['data'].'</a>
          <button type="button" class="btn btn-danger" data-dismiss="modal">Batal</button>
        </div>
      </div>
      
    </div>
  </div>';
  return $modal;
}

function apbd_icon_sudahada() {
	return '<span class="glyphicon glyphicon-ok-circle" style="color:blue"></span>';
}

function apbd_icon_belumada() {
	return '<span class="glyphicon glyphicon-remove-circle" style="color:red"></span>';
}